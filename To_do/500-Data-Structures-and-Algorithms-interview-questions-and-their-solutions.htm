<!DOCTYPE html><html lang='en' dir='ltr'><head><meta charset='utf-8' /><meta name='viewport' content='initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width, minimum-scale=1, viewport-fit=cover' /><meta name='quora-mobile' /><title>500 Data Structures and Algorithms interview questions and their solutions - Techie Delight - Quora</title><meta name="robots" content="noarchive" /><link as='script' rel='preload' href='https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-common-27-e3d2f3fe1a630228.webpack' /><link as='script' rel='preload' href='https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-TribeItemPageLoadable-27-f39fd59fcd1a9b35.webpack' /><link as='script' rel='preload' href='https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-polyfills-27-26aa3926c7f5a634.webpack' /><link as='script' rel='preload' href='https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-vendor-27-3f7d70ff46bbbba5.webpack' /><link as='style' rel='preload' href='https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-main.css-28-3756bfd827a246ed.webpack' /><link rel='stylesheet' type='text/css' href='https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-main.css-28-3756bfd827a246ed.webpack' id='ans-frontend-main-css' /><script type="text/javascript">window.isReactPage = true;window.isReactLoaded = true;window.ansFrontendRelayWebpackManifest = {"common":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-common-27-e3d2f3fe1a630228.webpack","component-AnswerEditor":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-AnswerEditor-27-4511fdad04f0a655.webpack","component-AnswerPageFooter":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-AnswerPageFooter-27-8171018d57f2d772.webpack","component-Comments":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-Comments-27-e1f24282f7699738.webpack","component-Login":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-Login-27-cd426b412dfdddea.webpack","component-Modals-AdsManager":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-Modals-AdsManager-27-2315b817b8c14122.webpack","component-Modals-AskQuestion":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-Modals-AskQuestion-27-d9ff5f6c5d603a7f.webpack","component-Modals-Editor":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-Modals-Editor-27-04be887b7b971096.webpack","component-Modals-NUX":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-Modals-NUX-27-bbd36668a978943c.webpack","component-Modals-others":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-Modals-others-27-179c2a0e03837148.webpack","component-NegativeFeedbacks":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-NegativeFeedbacks-27-062570620836cfb2.webpack","component-OverflowMenus":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-OverflowMenus-27-b385f6d5e534c999.webpack","component-PostPageFooter":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-PostPageFooter-27-61d6f1d6b77a5170.webpack","component-QTextEditor":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-QTextEditor-27-3d4283b2c4ebd460.webpack","component-SecondaryFeed":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-component-SecondaryFeed-27-e3a9d2f794a308e6.webpack","lib-@nivo/bar":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-lib-@nivo.bar-27-68aeefa07f79a869.webpack","lib-xlsx":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-lib-xlsx-27-96d47998e1c66a77.webpack","page-AdInternalCreativeTestLoadable-main":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-AdInternalCreativeTestLoadable-main-27-943e91cc9c452a9d.webpack","page-AdsManager-main":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-AdsManager-main-27-d0acb784983856c4.webpack","page-AdsManager-main-lib-@nivo/bar":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-AdsManager-main-lib-@nivo.bar-27-acb4a51f02a034ab.webpack","page-AnswerModalPrefetchedPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-AnswerModalPrefetchedPageLoadable-27-00d238e19f30aacc.webpack","page-AnswerPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-AnswerPageLoadable-27-fb5779d7038e0d41.webpack","page-AppDigestPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-AppDigestPageLoadable-27-f6094324de041761.webpack","page-AppNavSidebarPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-AppNavSidebarPageLoadable-27-20ce97bd71f345bf.webpack","page-Bookmarks":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-Bookmarks-27-fbcde21d4cd90da8.webpack","page-HomePageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-HomePageLoadable-27-a78313e0fe9a25e5.webpack","page-InternalSandboxPageLoadable-main":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-InternalSandboxPageLoadable-main-27-62cfaa6c6e2efed5.webpack","page-LogPages":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-LogPages-27-68103ed97fa216b7.webpack","page-LoginPages":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-LoginPages-27-b2d913da88bd7953.webpack","page-NotifsPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-NotifsPageLoadable-27-06ae578e8d571fb5.webpack","page-PostModalPrefetchedPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-PostModalPrefetchedPageLoadable-27-444199da254ba73e.webpack","page-QEmailOptOutPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-QEmailOptOutPageLoadable-27-322aa0527db869cb.webpack","page-QuestionAnswerDraftPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-QuestionAnswerDraftPageLoadable-27-788aa053e353c643.webpack","page-QuestionPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-QuestionPageLoadable-27-041632c8620f05cc.webpack","page-QuestionPrefetchedPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-QuestionPrefetchedPageLoadable-27-49126789b6dae6c8.webpack","page-ShareAnswerModalPrefetchedPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-ShareAnswerModalPrefetchedPageLoadable-27-f9b98ba0cac8620b.webpack","page-ShareModalPrefetchedPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-ShareModalPrefetchedPageLoadable-27-ba5577eb3e933e60.webpack","page-TopicPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-TopicPageLoadable-27-0dd5657353bcde34.webpack","page-TribeDashboardPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-TribeDashboardPageLoadable-27-30b9eab9497d2414.webpack","page-TribeItemPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-TribeItemPageLoadable-27-f39fd59fcd1a9b35.webpack","page-TribeMainPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-TribeMainPageLoadable-27-de9beda8f85118fd.webpack","page-TribePaidContributorNDAPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-TribePaidContributorNDAPageLoadable-27-623639bd8e2a46bb.webpack","page-TribesTabPageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-TribesTabPageLoadable-27-19446705427e9479.webpack","page-UiTest":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-UiTest-27-c9e2e4988858b079.webpack","page-UserProfilePageLoadable":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-UserProfilePageLoadable-27-08abd7755e3c1365.webpack","page-UserSettings":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-UserSettings-27-13e23a17b65d5997.webpack","page-WritePages":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-WritePages-27-2b5f7ff9fa5fca50.webpack","polyfills":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-polyfills-27-26aa3926c7f5a634.webpack","vendor":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-vendor-27-3f7d70ff46bbbba5.webpack","vendor-AdsManager":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-vendor-AdsManager-27-e25ff8a11715fc25.webpack","vendor-component-Modals-AdsManager":"https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-vendor-component-Modals-AdsManager-27-44929dce475162c6.webpack"};
var includedChunks = window.ansFrontendRelayWebpackIncludedChunks;
window.ansFrontendRelayWebpackIncludedChunks = (includedChunks || []).concat(["polyfills","common","vendor","page-TribeItemPageLoadable"]);</script><script type="text/javascript">window.ansFrontendGlobals = window.ansFrontendGlobals || {};window.ansFrontendGlobals.settingsStrictMode = false;</script><script type="text/javascript">window.ansFrontendGlobals = window.ansFrontendGlobals || {};window.ansFrontendGlobals.earlySettings = {"errorSamplingRate": 0, "interfaceLanguageCode": "en", "isDevCode": false, "topLevelNid": 0, "react_console_log_perf_info": false, "windowId": "react_yqeoajwzpeuekimp", "rootClsKey": "TribeItemPage", "rootQueryVariables": {"tribeItemId": 1838659, "redirectedQid": 0, "topAid": 0, "first": 5}, "rootProps": {"tribeItemId": 1838659, "isSeoMode": false}, "inlineQueryEnabled": true, "inlineQueryHashes": {"0b4d8f599a088fbfd2fb504ffe7d72ca877d4fbedb71d4c11522ae7960309793": true, "c6b32bbf35d3ba34eb98b1f96a1d5fbd31de8b762d9baad666f03142b9dedd83": true}, "isAppShell": false, "appShellInfo": {}, "earlyQueryRequestEnabled": false};</script><script type="text/javascript">window.ansFrontendGlobals = window.ansFrontendGlobals || {};window.ansFrontendGlobals.data = {"inlineQueryResults": {}};</script><script type="text/javascript" id="entryjs">!function(n){function t(t){for(var e,o,i=t[0],u=t[1],c=0,s=[];c<i.length;c++)o=i[c],r[o]&&s.push(r[o][0]),r[o]=0;for(e in u)Object.prototype.hasOwnProperty.call(u,e)&&(n[e]=u[e]);for(a&&a(t);s.length;)s.shift()()}var e={},r={entry:0};function o(n){return window.ansFrontendRelayWebpackManifest[n]}function i(t){if(e[t])return e[t].exports;var r=e[t]={i:t,l:!1,exports:{}};return n[t].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.e=function(n){if(0===r[n])return Promise.resolve();if(r[n])return r[n][2];var t=new Promise(function(t,e){r[n]=[t,e]});if(r[n][2]=t,-1!=window.ansFrontendRelayWebpackIncludedChunks.indexOf(n))return t;var e=document.getElementsByTagName("head")[0];(u=document.createElement("script")).charset="utf-8",u.timeout=120,i.nc&&u.setAttribute("nonce",i.nc),u.src=o(n),c=function(t){u.onerror=u.onload=null,clearTimeout(s);var e=r[n];if(0!==e){if(e){var o=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src,c=new Error("Loading chunk "+n+" failed.\n("+o+": "+i+")");c.type=o,c.request=i,e[1](c)}r[n]=undefined}};var u,c,s=setTimeout(function(){c({type:"timeout",target:u})},12e4);return u.onerror=u.onload=c,e.appendChild(u),t},i.m=n,i.c=e,i.d=function(n,t,e){i.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},i.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,t){if(1&t&&(n=i(n)),8&t)return n;if(4&t&&"object"===typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(i.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var r in n)i.d(e,r,function(t){return n[t]}.bind(null,r));return e},i.n=function(n){var t=n&&n.__esModule?function(){return n["default"]}:function(){return n};return i.d(t,"a",t),t},i.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},i.p="/",i.oe=function(n){throw console.error(n),n};var u=window.ansFrontendRelayWebpackJsonpFunction=window.ansFrontendRelayWebpackJsonpFunction||[],c=u.push.bind(u);u.push=t,u=u.slice();for(var s=0;s<u.length;s++)t(u[s]);var a=c;i(i.s=0)}({0:function(n,t,e){n.exports=e("oqNQ")},"8oxB":function(n,t){var e,r,o=n.exports={};function i(){throw new Error("setTimeout has not been defined")}function u(){throw new Error("clearTimeout has not been defined")}function c(n){if(e===setTimeout)return setTimeout(n,0);if((e===i||!e)&&setTimeout)return e=setTimeout,setTimeout(n,0);try{return e(n,0)}catch(t){try{return e.call(null,n,0)}catch(t){return e.call(this,n,0)}}}!function(){try{e="function"===typeof setTimeout?setTimeout:i}catch(n){e=i}try{r="function"===typeof clearTimeout?clearTimeout:u}catch(n){r=u}}();var s,a=[],f=!1,l=-1;function d(){f&&s&&(f=!1,s.length?a=s.concat(a):l=-1,a.length&&h())}function h(){if(!f){var n=c(d);f=!0;for(var t=a.length;t;){for(s=a,a=[];++l<t;)s&&s[l].run();l=-1,t=a.length}s=null,f=!1,function(n){if(r===clearTimeout)return clearTimeout(n);if((r===u||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(n);try{r(n)}catch(t){try{return r.call(null,n)}catch(t){return r.call(this,n)}}}(n)}}function p(n,t){this.fun=n,this.array=t}function v(){}o.nextTick=function(n){var t=new Array(arguments.length-1);if(arguments.length>1)for(var e=1;e<arguments.length;e++)t[e-1]=arguments[e];a.push(new p(n,t)),1!==a.length||f||c(h)},p.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=v,o.addListener=v,o.once=v,o.off=v,o.removeListener=v,o.removeAllListeners=v,o.emit=v,o.prependListener=v,o.prependOnceListener=v,o.listeners=function(n){return[]},o.binding=function(n){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(n){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},E2g8:function(n,t,e){(function(t,e){var r;r=function(){"use strict";function n(n){return"function"===typeof n}var r=Array.isArray?Array.isArray:function(n){return"[object Array]"===Object.prototype.toString.call(n)},o=0,i=void 0,u=void 0,c=function(n,t){p[o]=n,p[o+1]=t,2===(o+=2)&&(u?u(v):w())},s="undefined"!==typeof window?window:undefined,a=s||{},f=a.MutationObserver||a.WebKitMutationObserver,l="undefined"===typeof self&&"undefined"!==typeof t&&"[object process]"==={}.toString.call(t),d="undefined"!==typeof Uint8ClampedArray&&"undefined"!==typeof importScripts&&"undefined"!==typeof MessageChannel;function h(){var n=setTimeout;return function(){return n(v,1)}}var p=new Array(1e3);function v(){for(var n=0;n<o;n+=2){(0,p[n])(p[n+1]),p[n]=undefined,p[n+1]=undefined}o=0}var w=void 0;function y(n,t){var e=this,r=new this.constructor(_);r[b]===undefined&&C(r);var o=e._state;if(o){var i=arguments[o-1];c(function(){return D(o,r,i,e._result)})}else x(e,r,n,t);return r}function m(n){if(n&&"object"===typeof n&&n.constructor===this)return n;var t=new this(_);return j(t,n),t}w=l?function(){return t.nextTick(v)}:f?function(){var n=0,t=new f(v),e=document.createTextNode("");return t.observe(e,{characterData:!0}),function(){e.data=n=++n%2}}():d?function(){var n=new MessageChannel;return n.port1.onmessage=v,function(){return n.port2.postMessage(0)}}():s===undefined?function(){try{var n=Function("return this")().require("vertx");return"undefined"!==typeof(i=n.runOnLoop||n.runOnContext)?function(){i(v)}:h()}catch(t){return h()}}():h();var b=Math.random().toString(36).substring(2);function _(){}var g=void 0,A=1,P=2;function T(t,e,r){e.constructor===t.constructor&&r===y&&e.constructor.resolve===m?function(n,t){t._state===A?S(n,t._result):t._state===P?E(n,t._result):x(t,undefined,function(t){return j(n,t)},function(t){return E(n,t)})}(t,e):r===undefined?S(t,e):n(r)?function(n,t,e){c(function(n){var r=!1,o=function(n,t,e,r){try{n.call(t,e,r)}catch(o){return o}}(e,t,function(e){r||(r=!0,t!==e?j(n,e):S(n,e))},function(t){r||(r=!0,E(n,t))},n._label);!r&&o&&(r=!0,E(n,o))},n)}(t,e,r):S(t,e)}function j(n,t){if(n===t)E(n,new TypeError("You cannot resolve a promise with itself"));else if(function(n){var t=typeof n;return null!==n&&("object"===t||"function"===t)}(t)){var e=void 0;try{e=t.then}catch(r){return void E(n,r)}T(n,t,e)}else S(n,t)}function O(n){n._onerror&&n._onerror(n._result),L(n)}function S(n,t){n._state===g&&(n._result=t,n._state=A,0!==n._subscribers.length&&c(L,n))}function E(n,t){n._state===g&&(n._state=P,n._result=t,c(O,n))}function x(n,t,e,r){var o=n._subscribers,i=o.length;n._onerror=null,o[i]=t,o[i+A]=e,o[i+P]=r,0===i&&n._state&&c(L,n)}function L(n){var t=n._subscribers,e=n._state;if(0!==t.length){for(var r=void 0,o=void 0,i=n._result,u=0;u<t.length;u+=3)r=t[u],o=t[u+e],r?D(e,r,o,i):o(i);n._subscribers.length=0}}function D(t,e,r,o){var i=n(r),u=void 0,c=void 0,s=!0;if(i){try{u=r(o)}catch(a){s=!1,c=a}if(e===u)return void E(e,new TypeError("A promises callback cannot return that same promise."))}else u=o;e._state!==g||(i&&s?j(e,u):!1===s?E(e,c):t===A?S(e,u):t===P&&E(e,u))}var M=0;function C(n){n[b]=M++,n._state=undefined,n._result=undefined,n._subscribers=[]}var k=function(){function n(n,t){this._instanceConstructor=n,this.promise=new n(_),this.promise[b]||C(this.promise),r(t)?(this.length=t.length,this._remaining=t.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(t),0===this._remaining&&S(this.promise,this._result))):E(this.promise,new Error("Array Methods must be provided an Array"))}return n.prototype._enumerate=function(n){for(var t=0;this._state===g&&t<n.length;t++)this._eachEntry(n[t],t)},n.prototype._eachEntry=function(n,t){var e=this._instanceConstructor,r=e.resolve;if(r===m){var o=void 0,i=void 0,u=!1;try{o=n.then}catch(s){u=!0,i=s}if(o===y&&n._state!==g)this._settledAt(n._state,t,n._result);else if("function"!==typeof o)this._remaining--,this._result[t]=n;else if(e===F){var c=new e(_);u?E(c,i):T(c,n,o),this._willSettleAt(c,t)}else this._willSettleAt(new e(function(t){return t(n)}),t)}else this._willSettleAt(r(n),t)},n.prototype._settledAt=function(n,t,e){var r=this.promise;r._state===g&&(this._remaining--,n===P?E(r,e):this._result[t]=e),0===this._remaining&&S(r,this._result)},n.prototype._willSettleAt=function(n,t){var e=this;x(n,undefined,function(n){return e._settledAt(A,t,n)},function(n){return e._settledAt(P,t,n)})},n}(),F=function(){function t(n){this[b]=M++,this._result=this._state=undefined,this._subscribers=[],_!==n&&("function"!==typeof n&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof t?function(n,t){try{t(function(t){j(n,t)},function(t){E(n,t)})}catch(e){E(n,e)}}(this,n):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return t.prototype["catch"]=function(n){return this.then(null,n)},t.prototype["finally"]=function(t){var e=this.constructor;return n(t)?this.then(function(n){return e.resolve(t()).then(function(){return n})},function(n){return e.resolve(t()).then(function(){throw n})}):this.then(t,t)},t}();return F.prototype.then=y,F.all=function(n){return new k(this,n).promise},F.race=function(n){var t=this;return r(n)?new t(function(e,r){for(var o=n.length,i=0;i<o;i++)t.resolve(n[i]).then(e,r)}):new t(function(n,t){return t(new TypeError("You must pass an array to race."))})},F.resolve=m,F.reject=function(n){var t=new this(_);return E(t,n),t},F._setScheduler=function(n){u=n},F._setAsap=function(n){c=n},F._asap=c,F.polyfill=function(){var n=void 0;if("undefined"!==typeof e)n=e;else if("undefined"!==typeof self)n=self;else try{n=Function("return this")()}catch(o){throw new Error("polyfill failed because global object is unavailable in this environment")}var t=n.Promise;if(t){var r=null;try{r=Object.prototype.toString.call(t.resolve())}catch(o){}if("[object Promise]"===r&&!t.cast)return}n.Promise=F},F.Promise=F,F},n.exports=r()}).call(this,e("8oxB"),e("yLpj"))},S0B4:function(n,t,e){"use strict";e.d(t,"b",function(){return o});var r={},o=function(){return Object.assign({},r)};t.a=function(n){var t,e,o=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"",i=window,u=Date.now();if(n=o+n,null===(t=i.ansFrontendGlobals)||void 0===t?void 0:null===(e=t.earlySettings)||void 0===e?void 0:e.react_console_log_perf_info){var c,s=(null===(c=i.performance)||void 0===c?void 0:c.now)?i.performance.now():u;console.log("".concat(n,": ").concat(s))}r[n]=u}},VLrD:function(n,t,e){"use strict";n.exports=e("E2g8").polyfill()},oqNQ:function(n,t,e){"use strict";e.r(t);e("VLrD");var r=e("S0B4");Object(r.a)("entryLoaded");var o=function(n){return!("undefined"!==typeof fetch&&"undefined"!==typeof Promise&&Object.values&&Object.entries)?function(t){e.e("polyfills").then(e.bind(null,"ZjFC")).then(function(){n(t)})}:n},i=o(function(n){Promise.all([e.e("vendor"),e.e("common")]).then(e.bind(null,"A+VG")).then(function(t){return n(t)})}),u=o(function(n){Promise.all([e.e("vendor"),e.e("common")]).then(e.bind(null,"SKAY")).then(function(t){return n(t)})}),c=o(function(n){Promise.all([e.e("vendor"),e.e("common")]).then(e.bind(null,"pys6")).then(function(t){return n(t)})}),s=o(function(n){Promise.all([e.e("vendor"),e.e("common")]).then(e.bind(null,"Gnru")).then(function(t){return n(t)})}),a=o(function(n){Promise.all([e.e("vendor"),e.e("common")]).then(e.bind(null,"0xW3")).then(function(t){return n(t)})});window.runApp=function(){Object(r.a)("runAppCalled"),i(function(n){n.runApp()})},window.inlineReact=function(n,t,e,o){Object(r.a)("InlineReactCalled","loadable"),l(n,t,e,o)},window.shimProxy=window.shimProxy||{webnodeSubscribeEventsQueue:[]};var f=!1,l=function(n,t,e,o){var u=function(){f||(f=!0,i(function(i){Object(r.a)("StartAppInlineReactCalled","loadable"),i.inlineReact(n,t,e,o)}))};window.shimProxy.webnode?window.shimProxy.webnode.subscribe("REACT_LOADABLE_LOADED",u):window.shimProxy.webnodeSubscribeEventsQueue.push(["REACT_LOADABLE_LOADED",u])};window.renderPrefetchedPage=function(n,t,e){i(function(r){r.renderPrefetchedPage(n,t,e)})},window.renderPrefetchedPageModalDeprecated=function(n,t){i(function(e){e.renderPrefetchedPageModalDeprecated(n,t)})},window.reportPageSpeedData=function(n){c(function(t){return t.reportPageData(n)})},window.setTimingData=function(n){c(function(t){return t.setTimingData(n)})},window.setGlobalMetadata=function(n){s(function(t){return t.setGlobalMetadata(n)})},window.updateGlobalMetadata=function(n){s(function(t){return t.updateGlobalMetadata(n)})},window.setServerPerfCheckpointData=function(n){c(function(t){return t.setServerPerfCheckpointData(n)})},window.setWebnodeLoadable=function(n){a(function(t){return t.setWebnodeLoadable(n)})},window.installSettings=function(){u(function(n){return n.installSettings()})}},yLpj:function(n,t){var e;e=function(){return this}();try{e=e||new Function("return this")()}catch(r){"object"===typeof window&&(e=window)}n.exports=e}});</script><script type='text/javascript' src='https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-common-27-e3d2f3fe1a630228.webpack' async='1' defer='1' onerror='addAssetErr(this.src)'></script><script type='text/javascript' src='https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-page-TribeItemPageLoadable-27-f39fd59fcd1a9b35.webpack' async='1' defer='1' onerror='addAssetErr(this.src)'></script><script type='text/javascript' src='https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-polyfills-27-26aa3926c7f5a634.webpack' async='1' defer='1' onerror='addAssetErr(this.src)'></script><script type='text/javascript' src='https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-vendor-27-3f7d70ff46bbbba5.webpack' async='1' defer='1' onerror='addAssetErr(this.src)'></script><script type="text/javascript">window.runApp();</script><script type="text/javascript">var assetErrs=[];document.addEventListener("DOMContentLoaded",function(e){setTimeout(function(){if(0!==assetErrs.length){var e="assets="+encodeURIComponent(JSON.stringify(assetErrs)),t=new XMLHttpRequest;t.open("POST","/ajax/log_browser_asset_load_error_3RD_PARTY_POST",!0),t.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),t.setRequestHeader("Accept","*/*"),t.send(e.replace(/%20/g,"+"))}},0)}),window.addAssetErr=function(e){e&&assetErrs.push(e)};
</script></head><body class='q-platform--desktop'><div id='root'></div><noscript>Please enable Javascript and refresh the page to continue</noscript><script type="text/javascript">window.ansFrontendGlobals = window.ansFrontendGlobals || {};
window.ansFrontendGlobals.data = window.ansFrontendGlobals.data || {};
window.ansFrontendGlobals.data.inlineQueryResults = window.ansFrontendGlobals.data.inlineQueryResults || {};
window.ansFrontendGlobals.data.inlineQueryResults.results = window.ansFrontendGlobals.data.inlineQueryResults.results || {};
window.ansFrontendGlobals.data.inlineQueryResults.next = window.ansFrontendGlobals.data.inlineQueryResults.next || {};
window.ansFrontendGlobals.data.inlineQueryResults.results["c6b32bbf35d3ba34eb98b1f96a1d5fbd31de8b762d9baad666f03142b9dedd83"] = "{\"data\":{\"viewer\":{\"id\":\"Vmlld2VyQDA6MA==\",\"__typename\":\"Viewer\",\"user\":null,\"tribeWallInfo\":null,\"repeatOffenders\":null,\"inboxCount\":0,\"notificationNavBadgeCount\":0,\"isAdminMode\":false,\"tribesItemInSiteHeader\":true,\"tribeNavBadgeCount\":0,\"showGoToFeedGrowl\":false,\"showGoToFeedGrowlBadge\":false,\"writeNavBadgeCount\":0,\"profileNavBadgeCount\":0,\"memberNetworks\":[],\"uid\":null,\"nid\":0,\"silosBadgeCount\":\"{}\",\"notifTotalUnreadCount\":null,\"cookieBanner\":{\"id\":\"Q29va2llQmFubmVyQDA6djQzbmVGSnRuelZBblgyOC1Gd0NKUT09\",\"__typename\":\"CookieBanner\",\"browserId\":\"v43neFJtnzVAnX28-FwCJQ==\",\"bannerType\":1},\"notifCategoryUnreadCounts\":\"{}\",\"nextNotifUrlFromCurrentUrl\":null,\"isUniversalLoggedIn\":false},\"network\":{\"id\":\"TmV0d29yazow\",\"__typename\":\"Network\",\"quoraPolicyLinkUrl\":\"https://www.quora.com/What-are-the-major-policies-and-guidelines-on-Quora\",\"editBlockLinkUrl\":\"https://www.quora.com/What-does-it-mean-to-be-edit-blocked-or-banned-on-Quora/answer/Quora-Official-Account\"},\"nux\":null,\"activationWall\":null,\"followTribeWallDeck\":null,\"sidebar\":{\"id\":\"U2lkZWJhckAwOjA=\",\"__typename\":\"Sidebar\",\"shouldShowDebugPanel\":false,\"gatingPageUrl\":null,\"demoPageUrl\":null}},\"broadcastId\":\"main-w-chan52-8888-react_yqeoajwzpeuekimp-0B9G\",\"tchannelData\":{\"minSeq\":\"0\",\"channel\":\"main-w-chan52-8888-react_yqeoajwzpeuekimp-0B9G\",\"channelHash\":\"18069410028147762702\",\"boxName\":\"chan52-8888\",\"baseHost\":\"quora.com\",\"targetUrl\":\"\",\"enableWebsocket\":true},\"broadcastData\":{\"categoryToDepkeys\":{\"Viewer:isUniversalLoggedIn:Vmlld2VyQDA6MA==\":[\"LIUS:260971ced2f5da7b5b4268a41656f479\",\"LIUB:b8d7767dd2f5687a681317a47a28543d\"]},\"depkeyToVersion\":{\"LIUS:260971ced2f5da7b5b4268a41656f479\":0,\"LIUB:b8d7767dd2f5687a681317a47a28543d\":0}}}";
window.ansFrontendGlobals.data.inlineQueryResults.next["c6b32bbf35d3ba34eb98b1f96a1d5fbd31de8b762d9baad666f03142b9dedd83"] && window.ansFrontendGlobals.data.inlineQueryResults.next["c6b32bbf35d3ba34eb98b1f96a1d5fbd31de8b762d9baad666f03142b9dedd83"]();</script><script type="text/javascript">window.ansFrontendGlobals = window.ansFrontendGlobals || {};window.ansFrontendGlobals.settings = {"action": "tribe_item", "controller": "tribes", "pageType": "tribe_main", "pageOid": 414423, "getPageTypeOfRefererUrl": "tribe_main", "getRefererUrl": null, "getRefererUrlTarget": null, "getParams": {}, "viewInAppLinkInfo": {}, "cookiePrefix": "m", "nid": 0, "revision": "5b8fa5a486e36e12603f139251a4b93b647999ec", "isCanaryRevision": false, "debugToolsEnabled": false, "graphqlClientRequestLogging": true, "persistedQueriesEnabled": true, "formkey": "64a63727ef277c85cfcce670f2d096a7", "postkey": "dc12d42d0deb23d3baa67b0a97a6807d", "buildNumber": 0, "broadcastId": "main-w-chan52-8888-react_yqeoajwzpeuekimp-0B9G", "broadcastDisabled": false, "tchannelData": {"minSeq": "0", "channel": "main-w-chan52-8888-react_yqeoajwzpeuekimp-0B9G", "channelHash": "18069410028147762702", "boxName": "chan52-8888", "baseHost": "quora.com", "targetUrl": "", "enableWebsocket": true}, "viewerUid": null, "isQuoraEmployee": false, "shouldReportE2E": false, "shouldReportReactLoadableE2E": true, "cdn": "fastly_singapore", "request_id": "77f0e0c6194b4505894817cf301d5ce0", "actionTrail": null, "clientLogTrail": null, "experiments": {"test_experiment_name_2": null, "react_mweb_nux_holdout": null, "react_mweb_nux_change_topic_size": null, "react_app_nux": null, "react_app_nux_i18n": null, "react_mweb_answer_editor_modal": null, "react_app_answer_editor_modal": null, "react_desktop_answer_editor_modal": null, "react_mweb_answer_editor_modal_i18n": null, "react_app_answer_editor_modal_i18n": null, "react_desktop_answer_editor_modal_i18n": null, "space_follow_suggestion_on_question_page_visit_v2": null, "space_follow_suggestion_on_home_page_visit_v2": null, "react_app_write_pages": null, "react_app_write_pages_i18n": null, "react_answer_upvoter_modal_desktop": null, "react_answer_upvoter_modal_app": null, "react_answer_upvoter_modal_mweb": null, "use_prefetched_link_for_question_android": null, "use_prefetched_link_for_question_ios": null, "provisional_authorization_ios": null, "disable_links_action_bar_native": null, "better_image_preview": null, "answer_share_ui_redesign": null, "smaller_titles": null, "smaller_titles_i18n": null, "space_follow_suggestion_on_digest_clickthrough_mweb": null, "covid_share_ui_share_text": null, "covid_share_ui_no_share_text": null, "share_title_before_content_notif_copy": null, "scheduled_system_email_optout_page_react": null, "notif_in_product_ui_changes": null, "denser_modal_reading_experience_native_i18n": null, "bigger_credible_voters_badge": null, "full_share_in_modal_v2": null, "admin_name_spaces_carousel": null, "sessions_carousel_in_coronavirus_tribe": null, "icon_action_bar_post_expand": null, "icon_action_bar_post_expand_v2": null, "comments_modal_clickthrough": null, "comments_ui_improvements": null, "comments_sticky_action_bar_app": null, "remove_description_of_space": null, "remove_description_of_space_in_nux": null, "i18n_follow_one_space_nux_step_mweb": null, "i18n_follow_one_space_nux_step_desktop": null, "question_page_app_download_modal_holdout": null, "hide_credential_loqp": "hide", "google_one_tap_sign_up_desktop": "true", "google_one_tap_sign_up_mweb": "true", "feed_page_app_download_modal_newer_devices_holdout": null, "feed_page_app_download_modal_older_devices_holdout": null}, "gates": {"enable_ad_placement_targeting": false, "enable_lead_gen_campaign": false, "lead_gen_logged_out": false, "lead_gen_ad_react_modal": false, "ads_filtered_location_search": true, "enable_tribe_answer_expand_ad": false, "enable_tribe_post_expand_ad": false, "enable_react_ad_account_creation_flow": true, "enable_react_multiple_ad_account_override": false, "enable_gst_related_account_settings_fields": true, "enable_gst_manage_payments_methods_flow": true, "enable_existing_payment_methods_flow_override": false, "enable_combined_account_settings_page": true, "covid_share_tooltip_enabled": false, "q1_notif_ui": false, "force_show_app_digest": false, "react_badging_simplified": true, "react_next_notifs_button": false, "force_show_tribe_wall": false, "force_inject_suggested_spaces": [1587006], "coronavirus_banner_secondary_url": null, "share_to_coronavirus_space_tooltip": false, "show_internal_sandbox": false, "internal_sandbox_oids": {}, "annotate_with_translation_template_info": false, "react_i18n_translation_lookup_console_log": false, "react_i18n_translation_rendered_console_log": false, "react_i18n_translation_enforce_pseudo_l10n": false, "react_i18n_translation_internal_plaintext_log_error": false, "partner_indicator": false, "current_event_banner_enabled": true, "coronavirus_topics": [7245130, 7470469, 7403796, 7467554, 7472884], "enable_sensitive_tribe_blurring": true, "can_edit_notable_writers": false, "create_tribe_flow": false, "tribe_reporting": false, "dead_tribe_application_form_url": "https://docs.google.com/forms/d/1ckgoaLlluh2K9KP4SDnPjQW92JgktyY88-OliQZJtBs", "blogs_spaces_migration_launch_post_url": "https://www.quora.com/q/updates/Transitioning-Blogs-to-Spaces", "remove_featured_comments_split_react": true, "desktop_qtext_toolbar_comment_editor": false, "tribe_post_native_prefetched_overlay_react": true, "react_tribe_submissions_tab": true, "disable_blocking_app_modal_mweb": false, "tribe_dashboard": false, "tribe_dashboard_mobile": false, "tribe_dashboard_desktop": false, "react_tribe_suggestions_tab": true, "react_tribe_post_editor_modal": false, "manage_as_tribe_page_tab": false, "answer_suggestion_author_invite_button": false, "react_space_page_universal_composer": false, "qtext_image_remove_button": false, "reorder_feed_story_react": false, "tribe_post_editor_photo_gallery": false, "relax_tribe_invite_rules": false, "tribe_banner_improvements": true, "show_more_images_react": false, "coronavirus_space_url": "/q/coronavirus?source=banner", "comments_modal_react": false, "comments_ui_improvements": false, "comments_sticky_action_bar": false, "icon_action_bar_post_expand": false, "full_share_in_modal": "text", "new_tribe_nux": false, "qtext_hyperlink_embed": false, "coronavirus_who_url": "https://www.who.int/emergencies/diseases/novel-coronavirus-2019", "coronavirus_cdc_url": "https://www.cdc.gov/", "enable_admin_tribe_submission_content_filtering": false, "tribe_item_ids_to_show_in_content_carousel": {"1587006": []}, "show_coronavirus_content_carousel_in_digest_bundle": false, "tribes_with_higher_content_queue_max_dequeue_rate": [1587006, 59], "react_tribe_people_tab": false, "react_tribe_questions_tab": false, "react_tribe_item_page": false, "react_tribe_queue_tab": true, "react_tribe_monetization_tab": false, "react_tribe_page_optimized_fetching": true, "enable_tribe_owner": false, "remove_description_of_space": false, "space_creator_announcement_banner": false, "show_write_page_dot_badge": false, "mobile_app_dark_mode": false, "dark_mode_debug_button": false, "provisional_authorization_ios": false, "badge_home_tab_timeout": 90, "custom_app_nav_bar_android": null, "custom_app_nav_bar_ios": null, "entry_into_feed_exp_threshold": 100, "lightweight_content_editor_toolbar": false, "ios_pull_to_refresh_js": false, "annotate_with_ids": false, "test_setting": true, "use_log_subdomain_for_log_sender_react": false, "use_log_subdomain_for_log_sender": true, "client_side_batched_logging_interval": 2000, "use_react_logged_out_tribe_main_page": false, "use_react_nux": false, "react_client_side_prerender_prefetched_page": true, "react_client_side_eager_prerender_prefetched_page": true, "use_react_logs_page": false, "verbose_client_logging_categories": [], "use_react_ask_question_flow": false, "react_console_log_perf_info": false, "use_react_open_in_app_banner": true, "full_react_mweb_site_header": true, "full_react_desktop_site_header_notifs_nav_item": false, "full_react_desktop_site_header": true, "use_react_editor_modal": false, "asset_source_override": null, "server_side_spoof_native_app_user_agent": false, "use_react_answer_editor_modal": false, "react_include_client_log_trail": true, "reset_jsonpfunc_on_prefetched_page_android": true, "hide_react_logo": false, "use_prefetched_link_for_question_page": false, "react_answer_upvoter_modal": false, "react_quora_share_upvoter_modal": false, "react_answer_sharer_modal": true, "react_resharers_list_modal": true, "react_question_edit_modal": false}, "googleClientId": "917071888555.apps.googleusercontent.com", "googleCookiePolicy": "http://quora.com", "isLoggedIn": false, "webBaseUrl": "http://www.quora.com/", "useGoogleAutoLogin": true, "showRepeatOffendersModal": true, "fbAppId": "136609459636", "fbApiVersion": "v3.2", "ansFrontendEarlyPackageUrl": "https://qsfs.fs.quoracdn.net/-3-ans_frontend-relay-27-9d3e8b2c3eb228d4.webpack", "stripePublishableKey": "pk_live_9MI7iqAKfs033l029FQIVsV3", "subdomainName": null, "subdomainSuffix": "quora.com", "reactTribeTabs": {"main": true, "people": false, "submissions": true, "suggestions": true, "questions": true, "earnings": false, "stats": false, "settings": false, "admin_log": false, "details": false, "queue": true}, "isClientSupported": true, "isOSSupported": true, "isOSDeprecated": false, "clientDeprecatedVersion": 0, "isAppUpgradeAvailable": false, "isAppDarkModeSupported": false, "appTheme": null, "appUsesDeviceTheme": false, "isAppNewReloadSupported": false, "moreStoriesTimeout": 90, "supportsProvisionalAuth": false, "deviceOSSupportsDarkMode": false, "postUrlSuffix": "", "deviceTheme": null, "appCustomNavStyle": null, "nativePageContainer": null, "showCoronavirusCarouselInDigest": false, "useMsgUpdateBadgeProperties": false, "shouldShowDarkModeToggleTooltip": false, "dragToDismiss": true, "i18nTranslationLoggingSampleRate": 0.1, "nativeStatusBarHeight": 0, "useGqlParaPost": true, "nativeSupportedSettings": {}, "shouldShowDarkModeToggles": false, "nativeToEnglishCharacterCountMultiplier": 1.0, "useLightWeightContentEditorToolbar": false};</script><script type="text/javascript">window.installSettings();</script><script type="text/javascript">window.ansFrontendGlobals = window.ansFrontendGlobals || {};
window.ansFrontendGlobals.data = window.ansFrontendGlobals.data || {};
window.ansFrontendGlobals.data.inlineQueryResults = window.ansFrontendGlobals.data.inlineQueryResults || {};
window.ansFrontendGlobals.data.inlineQueryResults.results = window.ansFrontendGlobals.data.inlineQueryResults.results || {};
window.ansFrontendGlobals.data.inlineQueryResults.next = window.ansFrontendGlobals.data.inlineQueryResults.next || {};
window.ansFrontendGlobals.data.inlineQueryResults.results["0b4d8f599a088fbfd2fb504ffe7d72ca877d4fbedb71d4c11522ae7960309793"] = "{\"data\":{\"redirectedQuestion\":null,\"tribeItem\":{\"post\":{\"id\":\"UG9zdEAwOjU0ODUwNDM=\",\"__typename\":\"Post\",\"pid\":5485043,\"viewHash\":\"p-5485043_d08c690581f4d330c4013e9ca518c336\",\"tribeItem\":{\"id\":\"UG9zdFRyaWJlSXRlbUAwOjE4Mzg2NTk=\",\"__typename\":\"PostTribeItem\",\"isTribeItemContentDeleted\":false,\"authorPermission\":3,\"tribe\":{\"id\":\"VHJpYmVAMDo0MTQ0MjM=\",\"__typename\":\"Tribe\",\"url\":\"/q/kqxqbzywcunzbyyp\",\"iconUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-ti-414423-100-yukrawdqoyxvcvwblyvexdhjmurucwri.jpeg\",\"name\":\"{\\\"sections\\\": [{\\\"spans\\\": [{\\\"text\\\": \\\"Techie Delight\\\", \\\"modifiers\\\": {}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}]}\",\"tribeId\":414423,\"isFollowing\":false,\"followerCount\":1671,\"viewerCanContribute\":false,\"viewerCanAdmin\":false,\"notifStatus\":null,\"isMuted\":false,\"viewerIsOnlyAdmin\":false,\"owner\":null,\"isSensitive\":false,\"viewerCanModerate\":false},\"viewerCanBlockTribeItemAuthor\":false,\"canInviteAuthorToTribe\":false,\"viewerIsAllowedToSendMessage\":false,\"tribeItemId\":1838659,\"isTribeItemPinned\":true,\"containsDifferentExistingPin\":false,\"isTribeItemDeleted\":false,\"authorIsBlockedByTribe\":false,\"author\":{\"id\":\"VXNlckAwOjIyOTk5NzIzOA==\",\"__typename\":\"User\",\"uid\":229997238,\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MjI5OTk3MjM4OkxBVE4=\",\"reverseOrder\":false,\"givenName\":\"Vivek\",\"familyName\":\"Srivastava\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},\"viewerInvitedAuthorToTribe\":false,\"submission\":null},\"title\":\"{\\\"sections\\\": [{\\\"spans\\\": [{\\\"text\\\": \\\"500 Data Structures and Algorithms interview questions and their solutions\\\", \\\"modifiers\\\": {}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}]}\",\"url\":\"https://www.quora.com/q/kqxqbzywcunzbyyp/500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions\",\"authorCredential\":null,\"author\":{\"id\":\"VXNlckAwOjIyOTk5NzIzOA==\",\"__typename\":\"User\",\"isAnon\":false,\"uid\":229997238,\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MjI5OTk3MjM4OkxBVE4=\",\"reverseOrder\":false,\"givenName\":\"Vivek\",\"familyName\":\"Srivastava\",\"scriptCode\":\"LATN\"}],\"adminNames\":[],\"profileUrl\":\"/profile/Vivek-Srivastava-266\",\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-229997238-200-bbmpiwigvlqcufxunkcytdqdynlarjln.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isBlocking\":false,\"disabledContentComment\":false},\"creationTime\":1482785287261690,\"updatedTime\":0,\"content\":\"{\\\"sections\\\": [{\\\"spans\\\": [{\\\"text\\\": \\\"Array:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Find pair with given sum in the array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-pair-with-given-sum-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if subarray with 0 sum is exists or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-subarray-with-0-sum-exists-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all sub-arrays with 0 sum\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-sub-array-with-0-sum/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Sort binary array in linear time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-binary-array-linear-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find a duplicate element in a limited range array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-duplicate-element-limited-range-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find largest sub-array formed by consecutive integers\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum length sub-array having given sum\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-length-sub-array-having-given-sum/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum length sub-array having equal number of 0\\\\u2019s and 1\\\\u2019s\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Sort an array containing 0\\\\u2019s, 1\\\\u2019s and 2\\\\u2019s (Dutch national flag problem)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Inplace merge two sorted arrays\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/inplace-merge-two-sorted-arrays/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge two arrays by satisfying given constraints\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find index of 0 to replaced to get maximum length sequence of continuous ones\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum product of two integers in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-product-two-integers-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shuffle a given array of elements (Fisher\\\\u2013Yates shuffle)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Rearrange the array with alternate high and low elements\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find equilibrium index of an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-equilibrium-index-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find majority element in an array (Boyer\\\\u2013Moore majority vote algorithm)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-majority-element-in-an-array-boyer-moore-majority-vote-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Move all zeros present in the array to the end\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/move-zeros-present-array-end/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Replace each element of array with product of every other element without using / operator\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/replace-element-array-product-every-element-without-using-division-operator/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Longest Bitonic Subarray in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-longest-bitonic-subarray-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum difference between two elements in the array by satisfying given constraints\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-difference-between-two-elements-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximum subarray problem (Kadane\\\\u2019s algorithm)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-subarray-problem-kadanes-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print continuous subarray with maximum sum\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-continuous-subarray-with-maximum-sum/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximum Sum Circular Subarray\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-sum-circular-subarray/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all distinct combinations of given length\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-distinct-combinations-of-given-length/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all distinct combinations of given length with repetition allowed\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-distinct-combinations-given-length-repetition-allowed/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum sequence of continuous 1\\\\u2019s formed by replacing at-most k zeroes by ones\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-sequence-of-continuous-1s-can-formed-replacing-k-zeroes-ones/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find minimum sum subarray of given size k\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-sum-subarray-given-size-k/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find subarray having given sum in given array of integers\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-subarray-having-given-sum-given-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the length of smallest subarray whose sum of elements is greater than the given number\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/length-of-smallest-subarray-with-sum-greater-number/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find largest number possible from set of given numbers\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-largest-number-possible-set-given-numbers/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the smallest window in array sorting which will make the entire array sorted\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/smallest-window-sorting-which-make-array-sorted/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum sum path involving elements of given arrays\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-sum-path-involving-elements-given-arrays/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximum profit earned by buying and selling shares any number of times\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-profit-earned-buying-and-selling-shares\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Trapping Rain Water within given set of bars\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/trapping-rain-water-within-given-set-bars/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Increasing Subsequence\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-increasing-subsequence/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Decreasing Subsequence Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-decreasing-subsequence-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum product subarray in a given array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-product-subarray-given-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum sum of subsequence with no adjacent elements\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-sum-of-subsequence-with-no-adjacent-elements/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find minimum platforms needed in the station so to avoid any delay in arrival of any train\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/minimum-number-of-platforms-needed-avoid-delay-arrival-train/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Decode the array constructed from another array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/decode-the-array-constructed-another-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Sort an array using one swap\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-array-using-one-swap/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Triplet with given sum in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-triplet-given-with-given-sum/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Length of longest continuous sequence with same sum in given binary arrays\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/length-longest-continuous-sequence-same-sum-binary-arrays/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Rearrange array such that A[A[i]] is set to i for every element A[i]\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/rearrange-array-such-that-array-index-is-set-to-i/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse every consecutive m elements of the given subarray\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-every-consecutive-m-elements-given-subarray/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximum Product Subset Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-product-subset-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find pairs with given difference k in the array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-pairs-with-given-difference-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find pairs with given difference k in the array | Constant space solution\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-pairs-given-difference-k-array-constant-space-solution/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"4 sum problem | Quadruplets with given sum\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/4-sum-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all quadruplets with given sum | 4-sum problem extended\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-all-quadruplets-with-given-sum-4-sum-problem-extended/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find odd occurring element in an array in single traversal\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-odd-occurring-element-array-single-traversal/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find two odd occurring element in an array without using any extra space\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-two-odd-occurring-element-array-without-extra-space/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Quickselect Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/quickselect-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all Triplets that forms Arithmetic Progression\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-triplets-forms-arithmetic-progression/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all triplets that forms Geometric Progression\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-triplets-forms-geometric-progression/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all combination of numbers from 1 to n having sum n\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-all-combination-numbers-from-1-to-n/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Replace each element of the array by its corresponding rank in the array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/replace-each-element-corresponding-rank-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all Triplets in an array with sum less than or equal to given number\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-triplets-array-sum-less-equal-given-number/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Group elements of an array based on their first occurrence\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/group-elements-array-based-first-occurrence/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find minimum difference between index of two given elements present in the array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-difference-index-two-given-elements-present-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum absolute difference between sum of two non-overlapping sub-arrays\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-absolute-difference-subarrays/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all Symmetric Pairs in an Array of Pairs\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-symmetric-pairs-array-pairs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Partition an array into two sub-arrays with the same sum\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/partition-array-into-two-sub-arrays-with-same-sum/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find count of distinct elements in every sub-array of size k\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-distinct-elements-every-sub-array-size-k-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find two numbers with maximum sum formed by array digits\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-two-numbers-maximum-sum-array-digits/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all sub-arrays of an array having distinct elements\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-sub-arrays-array-distinct-elements/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find a Triplet having Maximum Product in an Array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-triplet-maximum-product-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find ways to calculate a target from elements of specified array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-ways-calculate-target-elements-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Minimum Index of Repeating Element in an Array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-index-repeating-element-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate Random Input from an Array according to given Probabilities\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-random-input-array-according-given-probabilities/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find pair in an array having minimum absolute sum\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-pair-array-minimum-absolute-sum/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Index of Maximum Occurring Element with Equal Probability\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-index-maximum-occurring-element-equal-probability/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if an Array is Formed by Consecutive Integers\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-array-formed-consecutive-integers/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find two non-overlapping pairs having same sum in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-two-non-overlapping-pairs-sum-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Minimum Product among all Combinations of Triplets in an Array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-product-triplets-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Replace every element of an array with the least greater element on its right\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/replace-every-element-array-least-greater-element-right/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all odd occurring elements in an array having limited range of elements\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-odd-occurring-elements-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Add elements of two arrays into a new array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/add-elements-two-arrays/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count the distinct absolute values in the sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-distinct-absolute-values-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all combinations of positive integers in increasing order that sum to a given number\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-combinations-integers-sum-given-number/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all distinct combinations of given length - Part 2\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-distinct-combinations-given-length-2/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find subarrays with given sum in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-subarrays-given-sum-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the surpasser count for each element of an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/surpasser-count-each-element-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum length sequence of continuous ones (Using Sliding Window)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-length-sequence-continuous-ones-sliding-window/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum length sequence of continuous ones\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-length-sequence-continuous-ones/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merging Overlapping Intervals\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merging-overlapping-intervals\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Activity Selection Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/activity-selection-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Job Sequencing Problem with Deadlines\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/job-sequencing-problem-deadlines/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Introduction to Priority Queues using Binary Heaps\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/introduction-priority-queues-using-binary-heaps/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Min Heap and Max Heap Implementation in C++\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/min-heap-max-heap-implementation-c/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Min Heap and Max Heap Implementation in Java\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/min-heap-max-heap-implementation-in-java/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Heap Sort (Out-of-place and In-place implementation in C++ and C)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/heap-sort-place-place-implementation-c-c/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given array represents min heap or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-array-represents-min-heap-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Convert Max Heap to Min Heap in linear time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/convert-max-heap-min-heap-linear-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find K\\\\u2019th largest element in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-kth-largest-element-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Sort a K-Sorted Array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-k-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge M sorted lists of variable length\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-m-sorted-lists-variable-length/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find K\\\\u2019th smallest element in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-kth-smallest-element-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find smallest range with at-least one element from each of the given lists\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-smallest-range-least-one-element-given-lists/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge M sorted lists each containing N elements\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-m-sorted-lists-containing-n-elements/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Insertion sort | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/insertion-sort-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Selection sort | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/selection-sort-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Bubble sort | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/bubble-sort-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge Sort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-sort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Quicksort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/quicksort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Iterative Implementation of Quicksort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/iterative-implementation-of-quicksort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Hybrid QuickSort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/hybrid-quicksort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Quicksort using Dutch National Flag Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/quicksort-using-dutch-national-flag-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Quick Sort using Hoare\\\\u2019s Partitioning scheme\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/quick-sort-using-hoares-partitioning-scheme/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"External merge sort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/external-merge-sort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Custom Sort | Sort elements by their frequency and Index\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-elements-by-their-frequency-and-index/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Custom Sort | Sort elements of the array by order of elements defined by the second array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/custom-sort-sort-elements-array-order-elements-defined-second-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Inversion Count of an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/inversion-count-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Segregate positive and negative integers in linear time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/positive-and-negative-integers-segregate/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Binary Search\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/binary-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Ternary Search vs Binary search\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/ternary-search-vs-binary-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Interpolation search\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/interpolation-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Exponential search\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/exponential-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find number of rotations in a circularly sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-number-rotations-circularly-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Search an element in a circular sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/search-element-circular-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find first or last occurrence of a given number in a sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-first-or-last-occurrence-of-a-given-number-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count occurrences of a number in a sorted array with duplicates\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-occurrences-number-sorted-array-duplicates/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find smallest missing element from a sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-smallest-missing-element-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Floor and Ceil of a number in a sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-floor-ceil-number-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Search in a nearly sorted array in O(logn) time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/search-nearly-sorted-array-ologn-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find number of 1\\\\u2019s in a sorted binary array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-number-1s-sorted-binary-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the peak element in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-peak-element-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximum Sum Subarray using Divide & Conquer\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-sum-subarray-using-divide-conquer/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Minimum and Maximum element in an array using minimum comparisons\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-maximum-element-array-using-minimum-comparisons/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Matrix Chain Multiplication\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/matrix-chain-multiplication/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"0-1 Knapsack problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/0-1-knapsack-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximize value of the expression\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximize-value-of-the-expression/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Partition problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/partition-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Subset sum problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/subset-sum-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Minimum Sum Partition problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/minimum-sum-partition-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Rod Cutting\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/rot-cutting/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Coin change-making problem (unlimited supply of coins)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/coin-change-making-problem-unlimited-supply-coins/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Coin Change Problem (Total number of ways to get the denomination of coins)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/coin-change-problem-find-total-number-ways-get-denomination-coins/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest alternating subsequence\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-alternating-subsequence/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Combinations of words formed by replacing given numbers with corresponding alphabets\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/combinations-of-words-formed-replacing-given-numbers-corresponding-english-alphabet/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Decode the given sequence to construct minimum number without repeated digits\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/decode-the-given-sequence-construct-minimum-number-without-repeated-digits/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"All combinations of elements satisfying given constraints\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-combinations-of-elements-satisfies-given-constraints/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Missing Term in a Sequence in log(n) time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-missing-term-sequence-ologn-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all distinct Subsets of a given Set\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-distinct-subsets-given-set/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Floor and Ceil of a number in a sorted array (Recursive solution)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-floor-ceil-number-sorted-array-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Set both elements of a binary array to 0 in single line\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/set-elements-binary-array-0-single-line/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"K-Partition Problem | Printing all Partitions\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/k-partition-problem-print-all-subsets/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"3 Partition Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/3-partition-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"3-partition problem extended | Print all partitions\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/3-partition-problem-extended-print-all-partitions/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Iterative Merge Sort Algorithm (Bottom-up Merge Sort)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/iterative-merge-sort-algorithm-bottom-up/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find two duplicate elements in an limited range array (using XOR)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-two-duplicate-elements-limited-range-array-using-xor/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find missing number and duplicate elements in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-missing-number-duplicate-elements-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Minimum and Maximum element in an array by doing minimum comparisons\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-maximum-element-array-minimum-comparisons/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Frequency of each element in a sorted array containing duplicates\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-frequency-element-sorted-array-containing-duplicates/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Difference between Subarray, Subsequence and Subset\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/difference-between-subarray-subsequence-subset/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Backtracking:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Print all possible solutions to N Queens problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-possible-solutions-n-queens-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all Possible Knight\\\\u2019s Tours in a chessboard\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-possible-knights-tours-chessboard/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Shortest Path in Maze\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-shortest-path-in-maze/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Longest Possible Route in a Matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-longest-possible-route-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find path from source to destination in a matrix that satisfies given constraints\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-path-source-destination-matrix-satisfies-given-constraints/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find total number of unique paths in a maze from source to destination\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-total-number-unique-paths-maze-source-destination/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print All Hamiltonian Path present in a graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-all-hamiltonian-path-present-in-a-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all k-colorable configurations of the graph (Vertex coloring of graph)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-k-colorable-configurations-graph-vertex-coloring-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all Permutations of a given string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-permutations-given-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"All combinations of elements satisfying given constraints\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-combinations-of-elements-satisfies-given-constraints/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all binary strings that can be formed from given wildcard pattern\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-binary-strings-can-formed-given-wildcard-pattern/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"K-Partition Problem | Printing all Partitions\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/k-partition-problem-print-all-subsets/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Magnet Puzzle\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/magnet-puzzle/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find ways to calculate a target from elements of specified array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-ways-calculate-target-elements-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find minimum number possible by doing at-most K swaps\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-number-possible-k-swaps/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if a pattern matches with a string or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-pattern-matches-string-not/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Binary:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Bit Hacks \\\\u2013 Part 1 (Basic)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/bit-hacks-part-1-basic/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Bit Hacks \\\\u2013 Part 2 (Playing with k\\\\u2019th bit)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/bit-hacks-part-2-playing-kth-bit/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Bit Hacks \\\\u2013 Part 3 (Playing with rightmost set bit of a number)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/bit-hacks-part-3-playing-rightmost-set-bit-number/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Bit Hacks \\\\u2013 Part 4 (Playing with letters of English alphabet)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/bit-hacks-part-4-playing-letters-english-alphabet/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Bit Hacks \\\\u2013 Part 5 (Find absolute value of an integer without branching)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/bit-hacks-part-5-find-absolute-value-integer-without-branching/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Bit Hacks \\\\u2013 Part 6 (Random Problems)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/bit-hacks-part-6-random-problems/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Brian Kernighan\\\\u2019s Algorithm to count set bits in an integer\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/brian-kernighans-algorithm-count-set-bits-integer/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Compute parity of a number using lookup table\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/compute-parity-number-using-lookup-table/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count set bits using lookup table\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-set-bits-using-lookup-table/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the minimum or maximum of two integers without using branching\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-maximum-two-integers-without-using-branching/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Multiply 16-bit integers using 8-bit multiplier\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/multiply-16-bit-integers-using-8-bit-multiplier/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Round up to the next highest power of 2\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/round-next-highest-power-2/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Round up to the previous power of 2\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/round-previous-power-2/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Swap individual bits at given position in an integer\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/swap-individual-bits-given-position-integer/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given number is power of 4 or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-number-power-of-4/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse Bits of a given Integer\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-bits-of-given-integer/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find odd occurring element in an array in single traversal\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-odd-occurring-element-array-single-traversal/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find two odd occurring element in an array without using any extra space\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-two-odd-occurring-element-array-without-extra-space/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Swap two bits at given position in an integer\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/swap-two-bits-given-position-integer/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Add binary representation of two integers\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/add-binary-representation-two-integers/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Swap Adjacent Bits of a Number\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/swap-adjacent-bits-number/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all distinct Subsets of a given Set\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-distinct-subsets-given-set/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Perform Division of two numbers without using division operator (/)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/perform-division-two-numbers-without-using-division-operator/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if adjacent bits are set in binary representation of a given number\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-adjacent-bits-set-binary-representation-number/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Conditionally negate a value without branching\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/conditionally-negate-value-without-branching/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find two duplicate elements in an limited range array (using XOR)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-two-duplicate-elements-limited-range-array-using-xor/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find missing number and duplicate elements in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-missing-number-duplicate-elements-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given number is power of 8 or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-number-power-8-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Circular shift on binary representation of an integer by k positions\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/circular-shift-integer-k-positions/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Solve given set of problems without using multiplication or division operators\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/solve-problems-without-using-multiplication-division-operators/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse Bits of an integer using lookup table\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-bits-integer-using-lookup-table/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate binary numbers between 1 to N\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-binary-numbers-1-n/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Efficiently implement power function | Recursive and Iterative\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/power-function-implementation-recursive-iterative/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find square of a number without using multiplication and division operator | 3 methods\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-square-number-without-using-multiplication-division-operator/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate power set of a given set\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-power-set-given-set/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Huffman Coding\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/huffman-coding/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all odd occurring elements in an array having limited range of elements\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-odd-occurring-elements-array/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Binary Tree:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Check if two given binary trees are identical or not | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-if-two-binary-trees-are-identical-not-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Calculate height of a binary tree | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/calculate-height-binary-tree-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Delete given Binary Tree | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/delete-given-binary-tree-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Inorder Tree Traversal | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/inorder-tree-traversal-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Preorder Tree Traversal | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/preorder-tree-traversal-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Postorder Tree Traversal | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/postorder-tree-traversal-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Level Order Traversal of Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/level-order-traversal-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Spiral Order Traversal of Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/spiral-order-traversal-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse Level Order Traversal of Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-level-order-traversal-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all nodes of a given binary tree in specific order\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-nodes-binary-tree-specific-order/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print left view of binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-left-view-of-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print Bottom View of Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-bottom-view-of-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print Top View of Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-top-view-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find next node in same level for given node in a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-next-node-in-same-level-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given binary tree is complete binary tree or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-binary-tree-complete-binary-tree-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if given two nodes are cousins of each other\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-two-nodes-are-cousins/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print cousins of given node in a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-cousins-of-given-node-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"In-place convert given binary tree to its sum tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/inplace-convert-a-tree-sum-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given binary tree is a sum tree or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-binary-tree-sum-tree-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Combinations of words formed by replacing given numbers with corresponding alphabets\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/combinations-of-words-formed-replacing-given-numbers-corresponding-english-alphabet/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if given binary tree is a subtree of another binary tree or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-given-binary-tree-is-subtree-of-another-binary-tree-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find diameter of a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-diameter-of-a-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given binary Tree has symmetric structure or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-binary-tree-symmetric-structure-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Convert binary tree to its mirror\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/convert-binary-tree-to-its-mirror/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if binary tree can be converted to another by doing any no. of swaps of left & right child\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-binary-tree-can-converted-another-number-swaps-left-right-child/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Lowest Common Ancestor (LCA) of two nodes in a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-lowest-common-ancestor-lca-two-nodes-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all paths from root to leaf nodes in given binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-all-paths-from-root-to-leaf-nodes-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find ancestors of given node in a Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-ancestors-of-given-node-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the distance between given pairs of nodes in a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/distance-between-given-pairs-of-nodes-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Vertical Sum in a given Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-vertical-sum-given-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print nodes in vertical order of a given Binary Tree (Vertical Traversal)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/vertical-traversal-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the diagonal sum of given binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-diagonal-sum-given-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print Diagonal Traversal of Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-diagonal-traversal-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print corner nodes of every level in binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-corner-nodes-every-level-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"In-place convert convert given Binary Tree to Doubly Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/place-convert-given-binary-tree-to-doubly-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Sink nodes containing zero to the bottom of the binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sink-nodes-containing-zero-bottom-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Convert given binary tree to full tree by removing half nodes\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/convert-given-binary-tree-to-full-tree-removing-half-nodes/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Truncate given binary tree to remove nodes which lie on a path having sum less than K\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/truncate-given-binary-tree-remove-nodes-lie-path-sum-less-k/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum sum root-to-leaf path in a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-sum-root-to-leaf-path-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given binary tree is height balanced or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-binary-tree-is-height-balanced-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Convert normal binary tree to Left-child right-sibling binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/convert-normal-binary-tree-left-child-right-sibling-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if given Binary Tree is a BST or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-given-binary-tree-is-a-bst-or-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Convert a Binary Tree to BST by maintaining its original structure\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/convert-binary-tree-to-bst-maintaining-original-structure/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Invert given Binary Tree | Recursive and Iterative solution\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/invert-binary-tree-recursive-iterative/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print Right View of a Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-right-view-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print leaf to root path for every leaf node in a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-leaf-to-root-path-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum width of given binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-width-given-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Build Binary Tree from given Parent array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/build-binary-tree-given-parent-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"C++ Program to Print Binary Tree Structure\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/c-program-print-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all nodes at given distance from leaf nodes in a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-all-nodes-at-given-distance-from-leaf-nodes-in-a-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count all subtrees having same value of nodes in a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-subtrees-value-nodes-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Maximum Difference Between a Node and its Descendants in a Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-difference-node-descendants/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Construct a Binary Tree from Ancestor Matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/construct-binary-tree-ancestor-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Calculate height of a binary tree with leaf nodes forming a circular doubly linked list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/calculate-height-binary-tree-leaf-nodes-forming-circular-doubly-linked-list/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"BST:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Insertion in BST\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/insertion-in-bst/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Search given key in BST\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/search-given-key-in-bst/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Deletion from BST\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/deletion-from-bst/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Construct balanced BST from given keys\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/construct-balanced-bst-given-keys/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if given Binary Tree is a BST or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-given-binary-tree-is-a-bst-or-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given keys represents same BSTs or not without building the BST\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-keys-represents-same-bsts-not-without-building-bst/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find inorder predecessor for given key in a BST\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-inorder-predecessor-given-key-bst/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Lowest Common Ancestor (LCA) of two nodes in a Binary Search Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-lowest-common-ancestor-lca-two-nodes-bst/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find K\\\\u2019th smallest and K\\\\u2019th largest element in BST\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-kth-smallest-largest-element-bst/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Floor and Ceil in a Binary Search Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/floor-ceil-bst-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find optimal cost to construct binary search tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-optimal-cost-to-construct-binary-search-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Convert a Binary Tree to BST by maintaining its original structure\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/convert-binary-tree-to-bst-maintaining-original-structure/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Remove nodes from BST that have keys outside the valid range\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/remove-nodes-bst-keys-outside-valid-range/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find a pair with given sum in a BST\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-pair-with-given-sum-bst/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find inorder successor for given key in a BST\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-inorder-successor-given-key-bst/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Replace every element of an array with the least greater element on its right\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/replace-every-element-array-least-greater-element-right/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Divide & Conquer:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Binary Search\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/binary-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find number of rotations in a circularly sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-number-rotations-circularly-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Search an element in a circular sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/search-element-circular-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find first or last occurrence of a given number in a sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-first-or-last-occurrence-of-a-given-number-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count occurrences of a number in a sorted array with duplicates\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-occurrences-number-sorted-array-duplicates/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find smallest missing element from a sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-smallest-missing-element-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Floor and Ceil of a number in a sorted array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-floor-ceil-number-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Search in a nearly sorted array in O(logn) time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/search-nearly-sorted-array-ologn-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find number of 1\\\\u2019s in a sorted binary array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-number-1s-sorted-binary-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the peak element in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-peak-element-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximum Sum Subarray using Divide & Conquer\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-sum-subarray-using-divide-conquer/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Minimum and Maximum element in an array using minimum comparisons\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-maximum-element-array-using-minimum-comparisons/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Efficiently implement power function | Recursive and Iterative\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/power-function-implementation-recursive-iterative/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Missing Term in a Sequence in log(n) time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-missing-term-sequence-ologn-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Division of Two Numbers using Binary Search Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/division-two-numbers-using-binary-search-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Floor and Ceil of a number in a sorted array (Recursive solution)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-floor-ceil-number-sorted-array-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Minimum and Maximum element in an array by doing minimum comparisons\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-maximum-element-array-minimum-comparisons/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Frequency of each element in a sorted array containing duplicates\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-frequency-element-sorted-array-containing-duplicates/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Ternary Search vs Binary search\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/ternary-search-vs-binary-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Exponential search\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/exponential-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Interpolation search\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/interpolation-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge Sort Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-sort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Iterative Merge Sort Algorithm (Bottom-up Merge Sort)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/iterative-merge-sort-algorithm-bottom-up/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge Sort Algorithm for Singly Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-sort-singly-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Inversion Count of an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/inversion-count-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Quicksort Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/quicksort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Iterative Implementation of Quicksort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/iterative-implementation-of-quicksort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Hybrid QuickSort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/hybrid-quicksort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Quicksort using Dutch National Flag Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/quicksort-using-dutch-national-flag-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Quick Sort using Hoare\\\\u2019s Partitioning scheme\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/quick-sort-using-hoares-partitioning-scheme/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Dynamic Programming:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Introduction to Dynamic Programming\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/introduction-dynamic-programming/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Subsequence | Introduction & LCS Length\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-subsequence/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Subsequence | Space optimized version\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-subsequence-lcs-space-optimized-version/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Subsequence of K-sequences\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-subsequence-of-k-sequences/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Subsequence | Finding all LCS\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-subsequence-finding-lcs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Substring problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-substring-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Palindromic Subsequence using Dynamic Programming\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-palindromic-subsequence-using-dynamic-programming/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Repeated Subsequence problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-repeated-subsequence-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Implement Diff Utility\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/implement-diff-utility/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shortest Common Supersequence | Introduction & SCS Length\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/shortest-common-supersequence-introduction-scs-length/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shortest Common Supersequence | Finding all SCS\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/shortest-common-supersequence-finding-scs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shortest Common Supersequence | Using LCS\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/shortest-common-supersequence-using-lcs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Increasing Subsequence using Dynamic Programming\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-increasing-subsequence-using-dynamic-programming/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Bitonic Subsequence\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-bitonic-subsequence/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Increasing Subsequence with Maximum Sum\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/increasing-subsequence-with-maximum-sum/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"The Levenshtein distance (Edit distance) problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/levenshtein-distance-edit-distance-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find size of largest square sub-matrix of 1\\\\u2019s present in given binary matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-size-largest-square-sub-matrix-1s-present-given-binary-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Matrix Chain Multiplication\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/matrix-chain-multiplication/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the minimum cost to reach last cell of the matrix from its first cell\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-cost-reach-last-cell-matrix-first-cell/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find longest sequence formed by adjacent numbers in the matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-longest-sequence-formed-adjacent-numbers-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count number of paths in a matrix with given cost to reach destination cell\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/counting-paths-on-grid-to-reach-destination-cell/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"0-1 Knapsack problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/0-1-knapsack-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximize value of the expression\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximize-value-of-the-expression/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Partition problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/partition-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Subset sum problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/subset-sum-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Minimum Sum Partition problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/minimum-sum-partition-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all N-digit binary strings without any consecutive 1\\\\u2019s\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-n-digit-binary-strings-without-consecutive-1s/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Rod Cutting\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/rot-cutting/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximum Product Rod Cutting\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-product-rod-cutting/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Coin change-making problem (unlimited supply of coins)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/coin-change-making-problem-unlimited-supply-coins/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Coin Change Problem \\\\u2013 Find total number of ways to get the denomination of coins\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/coin-change-problem-find-total-number-ways-get-denomination-coins/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Total possible solutions to linear equation of k variables\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/total-possible-solutions-linear-equation-k-variables/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest alternating subsequence\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-alternating-subsequence/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count number of times a pattern appears in given string as a subsequence\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-number-times-pattern-appears-given-string-subsequence/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Collect maximum points in a matrix by satisfying given constraints\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/collect-maximum-points-matrix-satisfying-given-constraints/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count total possible combinations of N-digit numbers in a mobile keypad\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-total-possible-combinations-n-digit-numbers-mobile-keypad/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find optimal cost to construct binary search tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-optimal-cost-to-construct-binary-search-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Word Break Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/word-break-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Word Break Problem | Using Trie Data Structure\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/word-break-problem-using-trie/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine Minimal Adjustment Cost of an Array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-minimal-adjustment-cost-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if a string is K-Palindrome or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-string-k-palindrome-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Wildcard Pattern Matching\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/wildcard-pattern-matching/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find probability that a person is alive after taking N steps on the island\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/probability-alive-after-taking-n-steps-island/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Calculate sum of all elements in a sub-matrix in constant time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/calculate-sum-elements-sub-matrix-constant-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum sum K x K sub-matrix in a given M x N matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-sum-submatrix-in-given-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum sum submatrix present in a given matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-sum-submatrix-present-given-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum sum of subsequence with no adjacent elements\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-sum-of-subsequence-with-no-adjacent-elements\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximum subarray problem (Kadane\\\\u2019s algorithm)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-subarray-problem-kadanes-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Single-Source Shortest Paths \\\\u2013 Bellman Ford Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/single-source-shortest-paths-bellman-ford-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"All-Pairs Shortest Paths \\\\u2013 Floyd Warshall Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/pairs-shortest-paths-floyd-warshall-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Decreasing Subsequence Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-decreasing-subsequence-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Pots of Gold Game using Dynamic Programming\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/pots-gold-game-dynamic-programming/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find minimum cuts needed for palindromic partition of a string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-cuts-needed-palindromic-partition-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Maximum Length Snake Sequence\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-length-snake-sequence/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"3 Partition Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/3-partition-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Calculate size of the largest plus of 1's in binary matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/calculate-size-largest-plus-1s-binary-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given string is interleaving of two other given strings\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-string-interleaving-two-given-strings/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Increasing Subsequence using LCS\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-increasing-subsequence-using-lcs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine negative-weight cycle in a graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-negative-weight-cycle-graph/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Graphs:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Terminology and Representations of Graphs\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/terminology-and-representations-of-graphs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Graph Implementation using STL\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/graph-implementation-using-stl/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Graph Implementation in C++ without using STL\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/graph-implementation-c-without-using-stl/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Implement Graph Data Structure in C\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/implement-graph-data-structure-c/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Graph Implementation in Java using Collections\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/graph-implementation-java-using-collections/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Breadth First Search (BFS) | Iterative & Recursive Implementation\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/breadth-first-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Depth First Search (DFS) | Iterative & Recursive Implementation\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/depth-first-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Arrival and Departure Time of Vertices in DFS\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/arrival-departure-time-vertices-dfs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Types of edges involved in DFS and relation between them\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/types-edges-involved-dfs-relation/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Bipartite Graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/bipartite-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if a given graph is Bipartite Graph using DFS\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-given-graph-bipartite-graph-using-dfs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Minimum number of throws required to win Snake and Ladder game\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/min-throws-required-to-win-snake-and-ladder-game/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Topological Sorting in a DAG\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/topological-sorting-dag/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Kahn's Topological Sort Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/kahn-topological-sort-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Transitive Closure of a Graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/transitive-closure-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if an undirected graph contains cycle or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-undirected-graph-contains-cycle-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Total paths in given digraph from given source to destination having exactly m edges\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/total-paths-in-digraph-from-source-to-destination-m-edges/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if an undirected graph is a Tree (Acyclic Connected Graph)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-undirected-graph-tree-acyclic-connected-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"2-Edge Connectivity in the graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/2-edge-connectivity-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"2-Vertex Connectivity in the graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/2-vertex-connectivity-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given digraph is a DAG (Directed Acyclic Graph) or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-digraph-dag-directed-acyclic-graph-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Disjoint-Set Data Structure (Union-Find Algorithm)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/disjoint-set-data-structure-union-find-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Chess Knight Problem \\\\u2013 Find Shortest path from source to destination\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/chess-knight-problem-find-shortest-path-source-destination/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given Graph is Strongly Connected or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-graph-strongly-connected-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given Graph is Strongly Connected or not using one DFS Traversal\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-graph-strongly-connected-one-dfs-traversal/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Union-Find Algorithm for Cycle Detection in undirected graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/union-find-algorithm-cycle-detection-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Kruskal\\\\u2019s Algorithm for finding Minimum Spanning Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/kruskals-algorithm-for-finding-minimum-spanning-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Single-Source Shortest Paths \\\\u2013 Dijkstra\\\\u2019s Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/single-source-shortest-paths-dijkstras-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Single-Source Shortest Paths \\\\u2013 Bellman Ford Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/single-source-shortest-paths-bellman-ford-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"All-Pairs Shortest Paths \\\\u2013 Floyd Warshall Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/pairs-shortest-paths-floyd-warshall-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Cost of Shortest Path in DAG using one pass of Bellman-Ford\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/cost-of-shortest-path-in-dag-using-one-pass-of-bellman-ford/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Least Cost Path in Weighted Digraph using BFS\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/least-cost-path-weighted-digraph-using-bfs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum cost path in graph from given source to destination\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-cost-path-graph-source-destination/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine negative-weight cycle in a graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-negative-weight-cycle-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all k-colorable configurations of the graph (Vertex coloring of graph)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-k-colorable-configurations-graph-vertex-coloring-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print All Hamiltonian Path present in a graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-all-hamiltonian-path-present-in-a-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Greedy coloring of graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/greedy-coloring-graph/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Heap:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Introduction to Priority Queues using Binary Heaps\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/introduction-priority-queues-using-binary-heaps/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Min Heap and Max Heap Implementation in C++\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/min-heap-max-heap-implementation-c/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Min Heap and Max Heap Implementation in Java\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/min-heap-max-heap-implementation-in-java/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Heap Sort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/heap-sort-place-place-implementation-c-c/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given array represents min heap or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-array-represents-min-heap-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Convert Max Heap to Min Heap in linear time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/convert-max-heap-min-heap-linear-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find K\\\\u2019th largest element in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-kth-largest-element-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Sort a K-Sorted Array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-k-sorted-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge M sorted lists of variable length\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-m-sorted-lists-variable-length/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find K\\\\u2019th smallest element in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-kth-smallest-element-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find smallest range with at-least one element from each of the given lists\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-smallest-range-least-one-element-given-lists/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge M sorted lists each containing N elements\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-m-sorted-lists-containing-n-elements/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"External merge sort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/external-merge-sort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Huffman Coding\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/huffman-coding/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find first k maximum occurring words in given set of strings\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-first-k-maximum-occurring-words-given-set-strings/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find first k non-repeating characters in a string in single traversal\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/first-k-non-repeating-characters-string/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Linked List:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Introduction to Linked Lists\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/introduction-linked-lists/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Linked List Implementation | Part 1\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/linked-list-implementation-part-1/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Linked List Implementation | Part 2\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/linked-list-implementation-part-2/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Static Linked List in C\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/static-linked-list-c/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Clone given Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/clone-given-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Delete Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/delete-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Pop operation in linked list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/pop-operation-in-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Insert given node into the correct sorted position in the given sorted linked list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sorted-insert-in-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Given a linked list, change it to be in sorted order\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/given-linked-list-change-sorted-order/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Split the nodes of the given linked list into front and back halves\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/split-nodes-given-linked-list-front-back-halves/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Remove duplicates from a sorted linked list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/remove-duplicates-sorted-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Move front node of the given list to the front of the another list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/move-front-node-given-list-front-another-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Move even nodes to the end of the list in reverse order\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/move-even-nodes-to-end-of-list-in-reverse-order/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Split given linked list into two lists where each list containing alternating elements from it\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/split-linked-list-into-two-lists-list-containing-alternating-elements/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Construct a linked list by merging alternate nodes of two given lists\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-alternate-nodes-two-linked-lists/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge given sorted linked lists into one\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-given-sorted-linked-lists/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge Sort Algorithm for Singly Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-sort-singly-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Intersection of two given sorted linked lists\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/intersection-two-given-sorted-linked-lists/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse linked list | Part 1 (Iterative Solution)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-linked-list-part-1-iterative-solution/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse linked list | Part 2 (Recursive Solution)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-linked-list-part-2-recursive-solution/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse every group of k nodes in given linked list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-every-k-nodes-of-a-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find K\\\\u2019th node from the end in a linked list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-kth-node-from-the-end-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge alternate nodes of two linked lists into the first list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-alternate-nodes-two-linked-lists-first-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge two sorted linked lists from their end\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-two-sorted-linked-lists-end/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Delete every N nodes in a linked list after skipping M nodes\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/delete-every-n-nodes-linked-list-skipping-m-nodes/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Rearrange linked list in specific manner in linear time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/rearrange-linked-list-specific-manner-linear-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if linked list is palindrome or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-if-linked-list-is-palindrome/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Move last node to front in a given Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/move-last-node-to-front-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Rearrange the linked list in specific manner\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/rearrange-the-linked-list-specific-manner/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Detect Cycle in a linked list (Floyd\\\\u2019s Cycle Detection Algorithm)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/detect-cycle-linked-list-floyds-cycle-detection-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Sort linked list containing 0\\\\u2019s, 1\\\\u2019s and 2\\\\u2019s\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-linked-list-containing-0s-1s-2s/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Stack Implementation using Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/stack-implementation-using-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Queue Implementation using Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/queue-implementation-using-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Remove duplicates from a linked list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/remove-duplicates-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Rearrange the linked list so that it has alternating high, low values\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/rearrange-linked-list-alternating-high-low-values/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Rearrange a Linked List by Separating Odd Nodes from the Even Ones\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/rearrange-linked-list-separating-odd-nodes-even/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Calculate height of a binary tree with leaf nodes forming a circular doubly linked list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/calculate-height-binary-tree-leaf-nodes-forming-circular-doubly-linked-list/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Matrix:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Print Matrix in Spiral Order\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-matrix-spiral-order/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Create Spiral Matrix from given array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/create-spiral-matrix-given-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shift all matrix elements by 1 in Spiral Order\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/shift-matrix-elements-1-spiral-order/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Shortest path from source to destination in a matrix that satisfies given constraints\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-shortest-path-source-destination-matrix-satisfies-given-constraints/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Change all elements of row i and column j in a matrix to 0 if cell (i, j) has value 0\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/change-elements-row-column-j-matrix-0-cell-j-value-0/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print diagonal elements of the matrix having positive slope\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-matrix-diagonally-positive-slope/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all paths from first cell to last cell of a matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-all-paths-from-source-to-destination-in-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Replace all occurrences of 0 that are not surrounded by 1 in a binary matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/replace-occurrences-0-not-surrounded-1-binary-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"In-place rotate the matrix by 90 degrees in clock-wise direction\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/place-rotate-matrix-90-degrees-clock-wise-direction/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count negative elements present in sorted matrix in linear time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-negative-elements-present-sorted-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Report all occurrences of an element in row wise and column wise sorted matrix in linear time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/report-all-occurrences-of-an-element-in-sorted-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Calculate sum of all elements in a sub-matrix in constant time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/calculate-sum-elements-sub-matrix-constant-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum sum K x K sub-matrix in a given M x N matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-sum-submatrix-in-given-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum sum submatrix present in a given matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-sum-submatrix-present-given-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find probability that a person is alive after taking N steps on the island\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/probability-alive-after-taking-n-steps-island/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count the number of islands\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-the-number-of-islands/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Flood fill Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/flood-fill-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find shortest safe route in a field with sensors present\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-shortest-safe-route-field-sensors-present/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all occurrences of given string in a character matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-occurrences-given-string-character-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shortest path in a Maze | Lee algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/lee-algorithm-shortest-path-in-a-maze/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given matrix is Toeplitz matrix or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-matrix-toeplitz-matrix-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"In-place rotate the matrix by 180 degrees\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/inplace-rotate-matrix-180-degrees/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Fill Binary Matrix with Alternating Rectangles of 0 and 1\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/fill-binary-matrix-alternating-rectangles-0-1/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all common elements present in every row of given matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-common-elements-present-every-row-given-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Construct a Binary Tree from Ancestor Matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/construct-binary-tree-ancestor-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find common elements present in all rows of a matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-common-elements-present-rows-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Travelling Salesman Problem using Branch and Bound\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/travelling-salesman-problem-using-branch-and-bound/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Collect maximum points in a matrix by satisfying given constraints\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/collect-maximum-points-matrix-satisfying-given-constraints/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count number of paths in a matrix with given cost to reach destination cell\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/counting-paths-on-grid-to-reach-destination-cell/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find longest sequence formed by adjacent numbers in the matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-longest-sequence-formed-adjacent-numbers-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the minimum cost to reach last cell of the matrix from its first cell\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-cost-reach-last-cell-matrix-first-cell/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Matrix Chain Multiplication\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/matrix-chain-multiplication/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find size of largest square sub-matrix of 1\\\\u2019s present in given binary matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-size-largest-square-sub-matrix-1s-present-given-binary-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Chess Knight Problem \\\\u2013 Find Shortest path from source to destination\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/chess-knight-problem-find-shortest-path-source-destination/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Duplicate rows in a binary matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-duplicate-rows-binary-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all possible solutions to N Queens problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-possible-solutions-n-queens-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all Possible Knight\\\\u2019s Tours in a chessboard\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-possible-knights-tours-chessboard/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Shortest Path in Maze\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-shortest-path-in-maze/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Longest Possible Route in a Matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-longest-possible-route-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Calculate size of the largest plus of 1's in binary matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/calculate-size-largest-plus-1s-binary-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the maximum value of M[c][d] \\\\u2013 M[a][b] over all choices of indexes\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-value-choices-indexes/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find shortest distance of every cell from landmine in a Maze\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-shortest-distance-every-cell-landmine-maze/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find shortest route in a device to construct the given string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-shortest-route-device-construct-given-string/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Queue:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Queue Implementation\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/circular-queue-implementation-c/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Queue Implementation using Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/queue-implementation-using-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Chess Knight Problem \\\\u2013 Find Shortest path from source to destination\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/chess-knight-problem-find-shortest-path-source-destination/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shortest path in a Maze | Lee algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/lee-algorithm-shortest-path-in-a-maze/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find shortest safe route in a field with sensors present\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-shortest-safe-route-field-sensors-present/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Flood fill Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/flood-fill-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count the number of islands\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-the-number-of-islands/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Shortest path from source to destination in a matrix that satisfies given constraints\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-shortest-path-source-destination-matrix-satisfies-given-constraints/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate binary numbers between 1 to N\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-binary-numbers-1-n/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Calculate height of a binary tree | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/calculate-height-binary-tree-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Delete given Binary Tree | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/delete-given-binary-tree-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Level Order Traversal of Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/level-order-traversal-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Spiral Order Traversal of Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/spiral-order-traversal-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse Level Order Traversal of Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-level-order-traversal-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all nodes of a given binary tree in specific order\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-nodes-binary-tree-specific-order/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print left view of binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-left-view-of-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find next node in same level for given node in a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-next-node-in-same-level-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given binary tree is complete binary tree or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-binary-tree-complete-binary-tree-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print Diagonal Traversal of Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-diagonal-traversal-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print corner nodes of every level in binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-corner-nodes-every-level-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Breadth First Search (BFS) | Iterative & Recursive Implementation\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/breadth-first-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Minimum number of throws required to win Snake and Ladder game\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/min-throws-required-to-win-snake-and-ladder-game/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if an undirected graph contains cycle or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-undirected-graph-contains-cycle-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Invert given Binary Tree | Recursive and Iterative solution\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/invert-binary-tree-recursive-iterative/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum cost path in graph from given source to destination\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-cost-path-graph-source-destination/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find shortest distance of every cell from landmine in a Maze\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-shortest-distance-every-cell-landmine-maze/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Sorting:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Insertion sort | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/insertion-sort-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Selection sort | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/selection-sort-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Bubble sort | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/bubble-sort-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge Sort Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-sort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Iterative Merge Sort Algorithm (Bottom-up Merge Sort)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/iterative-merge-sort-algorithm-bottom-up/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Quicksort Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/quicksort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Iterative Implementation of Quicksort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/iterative-implementation-of-quicksort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Hybrid QuickSort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/hybrid-quicksort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Quicksort using Dutch National Flag Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/quicksort-using-dutch-national-flag-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Quick Sort using Hoare\\\\u2019s Partitioning scheme\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/quick-sort-using-hoares-partitioning-scheme/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"External merge sort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/external-merge-sort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Counting Sort Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/counting-sort-algorithm-implementation/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Custom Sort | Sort elements by their frequency and Index\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-elements-by-their-frequency-and-index/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Custom Sort | Sort elements of the array by order of elements defined by the second array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/custom-sort-sort-elements-array-order-elements-defined-second-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Inversion Count of an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/inversion-count-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Segregate positive and negative integers in linear time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/positive-and-negative-integers-segregate/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Efficiently Sort an Array with many Duplicated Values\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/efficiently-sort-array-duplicated-values/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the smallest window in array sorting which will make the entire array sorted\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/smallest-window-sorting-which-make-array-sorted/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find largest number possible from set of given numbers\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-largest-number-possible-set-given-numbers/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Move all zeros present in the array to the end\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/move-zeros-present-array-end/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Sort binary array in linear time\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-binary-array-linear-time/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Sort linked list containing 0\\\\u2019s, 1\\\\u2019s and 2\\\\u2019s\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-linked-list-containing-0s-1s-2s/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge Sort Algorithm for Singly Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-sort-singly-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Group anagrams together from given list of words\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/group-anagrams-together-given-list-words/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Activity Selection Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/activity-selection-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Lexicographic sorting of given set of keys\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/lexicographic-sorting-given-set-of-keys/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Heap Sort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/heap-sort-place-place-implementation-c-c/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge M sorted lists of variable length\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-m-sorted-lists-variable-length/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge M sorted lists each containing N elements\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-m-sorted-lists-containing-n-elements/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all palindromic permutations of a string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-palindromic-permutations-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all lexicographically next permutations of a string sorted in ascending order\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-lexicographically-next-permutations-string-sorted-ascending-order/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge two sorted linked lists from their end\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-two-sorted-linked-lists-end/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Sort an array containing 0\\\\u2019s, 1\\\\u2019s and 2\\\\u2019s (Dutch national flag problem)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find pair with given sum in the array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-pair-with-given-sum-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Inplace merge two sorted arrays\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/inplace-merge-two-sorted-arrays/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merge two arrays by satisfying given constraints\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum product of two integers in an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-product-two-integers-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all distinct combinations of given length\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-distinct-combinations-of-given-length/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all distinct combinations of given length with repetition allowed\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-distinct-combinations-given-length-repetition-allowed/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Merging Overlapping Intervals\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/merging-overlapping-intervals\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all quadruplets with given sum | 4-sum problem extended\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-all-quadruplets-with-given-sum-4-sum-problem-extended/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"4 sum problem | Quadruplets with given sum\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/4-sum-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find two numbers with maximum sum formed by array digits\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-two-numbers-maximum-sum-array-digits/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find a Triplet having Maximum Product in an Array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-triplet-maximum-product-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Minimum Product among all Combinations of Triplets in an Array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-product-triplets-array/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all distinct combinations of given length - Part 2\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-distinct-combinations-given-length-2/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the surpasser count for each element of an array\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/surpasser-count-each-element-array/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Stack:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Stack Implementation\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/stack-implementation/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Stack Implementation using Linked List\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/stack-implementation-using-linked-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given expression is balanced expression or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-expression-balanced-expression-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find duplicate parenthesis in an expression\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-duplicate-parenthesis-expression/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Evaluate given postfix expression\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/evaluate-given-postfix-expression/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Decode the given sequence to construct minimum number without repeated digits\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/decode-the-given-sequence-construct-minimum-number-without-repeated-digits/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Inorder Tree Traversal | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/inorder-tree-traversal-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Preorder Tree Traversal | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/preorder-tree-traversal-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Postorder Tree Traversal | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/postorder-tree-traversal-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find ancestors of given node in a Binary Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-ancestors-of-given-node-binary-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if two given binary trees are identical or not | Iterative & Recursive\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-if-two-binary-trees-are-identical-not-iterative-recursive/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse given text without reversing the individual words\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-text-without-reversing-individual-words/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all binary strings that can be formed from given wildcard pattern\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-binary-strings-can-formed-given-wildcard-pattern/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Iterative Implementation of Quicksort\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/iterative-implementation-of-quicksort/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Depth First Search (DFS) | Iterative & Recursive Implementation\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/depth-first-search/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Invert given Binary Tree | Recursive and Iterative solution\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/invert-binary-tree-recursive-iterative/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print leaf to root path for every leaf node in a binary tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-leaf-to-root-path-binary-tree/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"String:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Check if given string is a rotated palindrome or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-string-rotated-palindrome-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Palindromic Substring (Non-DP Space Optimized Solution)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-palindromic-substring-non-dp-space-optimized-solution/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if repeated subsequence is present in the string or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-repeated-subsequence-present-string-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if strings can be derived from each other by circularly rotating them\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-strings-can-derived-circularly-rotating/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given set of moves is circular or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-set-moves-circular-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Convert given number into corresponding excel column name\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/convert-given-number-corresponding-excel-column-name/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if two strings are anagram or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-if-two-strings-are-anagram-or-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all binary strings that can be formed from given wildcard pattern\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-binary-strings-can-formed-given-wildcard-pattern/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all interleavings of given strings\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-interleavings-of-given-strings/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Isomorphic Strings\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/isomorphic-strings/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all possible palindromic substrings in a string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-possible-palindromic-substrings-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all possible combinations of words formed from mobile keypad\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-possible-combinations-words-formed-from-mobile-keypad/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all possible combinations by replacing given digits with characters of the corresponding list\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/possible-combinations-replacing-given-digits-corresponding-list/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all words from given list that follows same order of characters as given pattern\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-words-that-follows-given-pattern/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find first k non-repeating characters in a string in single traversal\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/first-k-non-repeating-characters-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Group anagrams together from given list of words\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/group-anagrams-together-given-list-words/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Introduction to Pattern Matching\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/introduction-pattern-matching/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Inplace remove all occurrences of \\\\u2018AB\\\\u2019 and \\\\u2018C\\\\u2019 from the string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/inplace-remove-all-occurrences-ab-c-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest even length palidromic sum substring\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-even-length-palidromic-sum-substring/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print string in zig-zag form in k rows\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse given text without reversing the individual words\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-text-without-reversing-individual-words/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Run Length Encoding (RLE) data compression algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/run-length-encoding-rle-data-compression-algorithm/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Validate an IP address\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/validate-ip-address/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the longest substring of given string containing k distinct characters\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-longest-substring-containing-k-distinct-characters/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all palindromic permutations of a string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-palindromic-permutations-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all substrings of a string that are permutation of a given string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-substrings-string-permutation-given-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the longest substring of given string containing all distinct characters\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-longest-substring-given-string-containing-distinct-characters/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all Permutations of a given string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-permutations-given-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Iterative Approach to find Permutations of a String in C++ and Java\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-permutations-string-cpp-java-iterative/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate all Permutations of a String in Java | Recursive & Iterative\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-permutations-string-java-recursive-iterative/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all lexicographically next permutations of a string sorted in ascending order\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-lexicographically-next-permutations-string-sorted-ascending-order/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Lexicographically minimal string rotation\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-lexicographically-minimal-string-rotation/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all strings of given length containing balanced parentheses\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-strings-given-length-containing-balanced-parentheses/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all N-digit strictly increasing numbers (Bottom-Up and Top-Down Approach)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-n-digit-strictly-increasing-numbers-bottom-top-approach/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all N-digit binary numbers having more 1\\\\u2019s than 0\\\\u2019s for any prefix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-n-digit-binary-numbers-having-more-one-than-zero/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all N-digit numbers with given sum of digits\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-all-n-digit-numbers-given-sum-digits/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all N-digit binary numbers with k-bits set where k ranges from 1 to N\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-n-digit-binary-numbers-k-bits-set-k-ranges-1-n/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate binary numbers between 1 to N\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-binary-numbers-1-n/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all combinations of non-overlapping substrings of a string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-combinations-non-overlapping-substrings-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given sentence is syntactically correct or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-sentence-syntactically-correct-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Calculate rank of given string among all its lexicographically sorted permutations\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/calculate-rank-lexicographically-sorted-permutations/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all Lexicographic Permutations of a String\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-lexicographic-permutations-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find all N-digit binary numbers with equal sum of bits in its two halves\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-n-digit-binary-numbers-equal-sum-bits-two-halves/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if given string is interleaving of two other given strings\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-string-interleaving-two-given-strings/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Difference between Subarray, Subsequence and Subset\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/difference-between-subarray-subsequence-subset/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"std::next_permutation | Overview & Implementation in C++\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/std_next_permutation-overview-implementation/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"std::prev_permutation | Overview & Implementation in C++\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/std_prev_permutation-overview-implementation/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Implementation of KMP Algorithm in C, C++ and Java\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/implementation-kmp-algorithm-c-cpp-java/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse String without using Recursion\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-string-without-using-recursion/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse given string using Recursion\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/reverse-a-string-using-recursion/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Reverse a String in Java in 10 different ways\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/10-ways-reverse-a-string-java/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if a given string is palindrome or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-given-string-is-palindrome-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"In-place remove all adjacent duplicates from the given string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/in-place-remove-all-adjacent-duplicates-from-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find the minimum number of inversions needed to make the given expression balanced\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/minimum-number-inversions-expression-balanced/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Replace all non-overlapping occurrences of the pattern\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/replace-non-overlapping-occurrences-pattern/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Construct the longest palindrome by shuffling or deleting characters from a string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/construct-longest-palindrome-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if characters of a String follows a specified order or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-string-follows-specified-order/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all combinations of phrases that can be formed by picking words from each of the given lists\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/combinations-phrases-formed-picking-words-lists/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Remove all extra spaces from a string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/remove-extra-spaces-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Break a string into all possible combinations of non-overlapping substrings\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/break-string-non-overlapping-substrings/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Remove adjacent duplicate characters from a string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/remove-adjacent-duplicates-characters-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Combinations of words formed by replacing given numbers with corresponding alphabets\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/combinations-of-words-formed-replacing-given-numbers-corresponding-english-alphabet/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Word Break Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/word-break-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Wildcard Pattern Matching\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/wildcard-pattern-matching/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Count number of times a pattern appears in given string as a subsequence\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/count-number-times-pattern-appears-given-string-subsequence/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"The Levenshtein distance (Edit distance) problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/levenshtein-distance-edit-distance-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Subsequence | Introduction & LCS Length\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-subsequence/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Subsequence | Space optimized version\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-subsequence-lcs-space-optimized-version/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Subsequence of K-sequences\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-subsequence-of-k-sequences/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Subsequence | Finding all LCS\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-subsequence-finding-lcs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Repeated Subsequence problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-repeated-subsequence-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Palindromic Subsequence using Dynamic Programming\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-palindromic-subsequence-using-dynamic-programming/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Substring problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-substring-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shortest Common Supersequence | Introduction & SCS Length\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/shortest-common-supersequence-introduction-scs-length/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shortest Common Supersequence | Finding all SCS\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/shortest-common-supersequence-finding-scs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shortest Common Supersequence | Using LCS\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/shortest-common-supersequence-using-lcs/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Implement Diff Utility\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/implement-diff-utility/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Word Break Problem | Using Trie Data Structure\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/word-break-problem-using-trie/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find minimum cuts needed for palindromic partition of a string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-cuts-needed-palindromic-partition-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Check if a string is K-Palindrome or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/check-given-string-k-palindrome-not/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find shortest route in a device to construct the given string\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-shortest-route-device-construct-given-string/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find minimum number possible by doing at-most K swaps\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-number-possible-k-swaps/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if a pattern matches with a string or not\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-pattern-matches-string-not/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Trie:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Trie Implementation | Insert, Search and Delete\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/trie-implementation-insert-search-delete/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Memory efficient Trie Implementation using Map | Insert, Search and Delete\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/memory-efficient-trie-implementation-using-map-insert-search-delete/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"C++ Implementation of Trie Data Structure\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/cpp-implementation-trie-data-structure/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Longest Common Prefix in given set of strings (using Trie)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/longest-common-prefix-given-set-strings-using-trie/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Lexicographic sorting of given set of keys\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/lexicographic-sorting-given-set-of-keys/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum occurring word in given set of strings\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-maximum-occurring-word-given-set-strings/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find first k maximum occurring words in given set of strings\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-first-k-maximum-occurring-words-given-set-strings/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find Duplicate rows in a binary matrix\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-duplicate-rows-binary-matrix/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Word Break Problem | Using Trie Data Structure\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/word-break-problem-using-trie/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Greedy:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Activity Selection Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/activity-selection-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Huffman Coding\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/huffman-coding/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Shortest Superstring Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/shortest-superstring-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Job Sequencing Problem with Deadlines\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/job-sequencing-problem-deadlines/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Greedy coloring of graph\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/greedy-coloring-graph/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Kruskal\\\\u2019s Algorithm for finding Minimum Spanning Tree\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/kruskals-algorithm-for-finding-minimum-spanning-tree/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Single-Source Shortest Paths \\\\u2013 Dijkstra\\\\u2019s Algorithm\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/single-source-shortest-paths-dijkstras-algorithm/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Puzzles:\\\", \\\"modifiers\\\": {\\\"bold\\\": true}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Clock angle problem \\\\u2013 Find angle between hour and minute hand\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/angle-between-hour-minute-hand/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Add two numbers without using addition operator | 4 methods\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/add-two-numbers-without-using-addition-operator/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate power set of a given set\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-power-set-given-set/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Implement power function without using multiplication and division operators\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/implement-power-function-without-using-multiplication-division-operators/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all numbers between 1 to N without using semicolon\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-numbers-1-n-without-using-semicolon/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Swap two numbers without using third variable | 5 methods\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/swap-two-numbers-without-using-third-variable/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine the if condition to print specific output\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-condition-to-print-specific-output/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find maximum, minimum of three numbers without using conditional statement and ternary operator | 4 methods\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/maximum-minimum-three-numbers-without-using-conditional-statement-ternary-operator/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find numbers represented as sum of two cubes for two different pairs\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/numbers-represented-as-sum-of-two-cubes/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print \\\\u201cHello World\\\\u201d with empty main() function | 3 methods\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-hello-world-empty-main-function/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Tower of Hanoi Problem\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/tower-of-hanoi-problem/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print all numbers between 1 to N without using any loop | 4 methods\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-numbers-1-n-without-using-loop-4-methods/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Print a semicolon without using semicolon anywhere in the program\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/print-a-semicolon-without-using-semicolon-anywhere-program/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Multiply two numbers without using multiplication operator or loops\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/multiply-two-numbers-without-using-multiplication-operator-loops/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find square of a number without using multiplication and division operator | 3 methods\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-square-number-without-using-multiplication-division-operator/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find if a number is even or odd without using any conditional statement\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-number-even-odd-without-using-conditional-statement/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Set both elements of a binary array to 0 in single line\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/set-elements-binary-array-0-single-line/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Find minimum number without using conditional statement or ternary operator\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/find-minimum-number-without-using-conditional-statement-ternary-operator/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Perform Division of two numbers without using division operator (/)\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/perform-division-two-numbers-without-using-division-operator/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate 0 and 1 with 75% and 25% Probability\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-0-1-75-25-probability/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate Desired Random Numbers With Equal Probability\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-random-numbers-equal-probability/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Return 0, 1 and 2 with equal Probability using the specified function\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/return-0-1-2-equal-probability-using-specified-function/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate Fair Results from a Biased Coin\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-fair-results-biased-coin/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate numbers from 1 to 7 with equal probability using specified function\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-numbers-1-7-equal-probability/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Implement Ternary Operator Without Using Conditional Expressions\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/implement-ternary-operator-without-using-conditional-statements/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Determine if two integers are equal without using comparison and arithmetic operators\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/determine-two-integers-equal-without-using-comparison-arithmetic-operators/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Return 0 and 1 with equal Probability using the specified function\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/get-0-1-equal-probability-using-specified-function/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate Random Input from an Array according to given Probabilities\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-random-input-array-according-given-probabilities/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Generate Fair Results from a Biased Coin\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/generate-fair-results-biased-coin/\\\"}}}, {\\\"text\\\": \\\"\\\\n\\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Magnet Puzzle\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://www.techiedelight.com/magnet-puzzle/\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Follow us on Quora: \\\", \\\"modifiers\\\": {}}, {\\\"text\\\": \\\"Techie Delight\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"board\\\", \\\"bid\\\": 2380228, \\\"url\\\": \\\"https://www.quora.com/q/kqxqbzywcunzbyyp\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}]}\",\"viewerIsAuthor\":false,\"numUpvotes\":3513,\"viewerHasUpvoted\":false,\"viewerHasDownvoted\":false,\"numSharers\":9,\"logUrl\":\"https://www.quora.com/q/kqxqbzywcunzbyyp/500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions/log\",\"isDeleted\":false,\"hasPendingEdits\":false,\"viewer\":{\"id\":\"Vmlld2VyQDA6MA==\",\"__typename\":\"Viewer\",\"isAdminMode\":false,\"user\":null},\"viewerHasBookmarked\":false,\"viewerHasReported\":false,\"reportUrl\":\"/report?type=post&key=mvd2yAiSuAB\",\"notForReproduction\":false,\"disabledComments\":false,\"viewerCanDisableComments\":false,\"shareUrl\":\"https://www.quora.com/q/kqxqbzywcunzbyyp/500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions/share\",\"facebookNetworkShareUrl\":\"https://www.quora.com/q/techiedelight/500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions?ch=1&share=1f1e7821\",\"twitterNetworkShareUrl\":\"https://www.twitter.com/intent/tweet?lang=en&related=quora&text=&url=https%3A%2F%2Fwww.quora.com%2Fq%2Ftechiedelight%2F500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions%3Fch%3D2\",\"lineShareUrl\":\"https://timeline.line.me/social-plugin/share?url=https://www.quora.com/q/techiedelight/500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions?ch=13&share=1f1e7821\",\"hatenaShareUrl\":\"https://b.hatena.ne.jp/my/add.confirm?url=https://www.quora.com/q/techiedelight/500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions?ch%3D14%26share%3D1f1e7821\",\"network\":{\"id\":\"TmV0d29yazow\",\"__typename\":\"Network\",\"featureManager\":{\"id\":\"RmVhdHVyZU1hbmFnZXJPYmplY3Q6U2hvd0phcGFuU2hhcmVJdGVtc0Aw\",\"__typename\":\"FeatureManagerObject\",\"booleanValue\":false}},\"numSocialVoters\":0,\"socialVoterNames\":[],\"socialVoterPhotos\":[],\"truncatedSocialUpvoters\":[],\"numDisplayComments\":58,\"numViews\":1785},\"id\":\"UG9zdFRyaWJlSXRlbUAwOjE4Mzg2NTk=\",\"__typename\":\"PostTribeItem\",\"tribeItemId\":1838659,\"isTribeItemDeleted\":false,\"isTribeItemContentDeleted\":false,\"tribe\":{\"contributorsSocialFirst\":[{\"id\":\"VXNlckAwOjMyMjc0\",\"__typename\":\"User\",\"uid\":32274,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-32274-200-olkwoajddyziterjaomjwkkebhwkikaf.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Praveen-Rachabattuni\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MzIyNzQ6TEFUTg==\",\"reverseOrder\":false,\"givenName\":\"Praveen\",\"familyName\":\"Rachabattuni\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjYzMTAz\",\"__typename\":\"User\",\"uid\":63103,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-63103-200-jU6ip5UDIaHStZ1atsQ85Tx4eX3quI9D.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Brett-Morgan\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NjMxMDM6TEFUTg==\",\"reverseOrder\":false,\"givenName\":\"Brett\",\"familyName\":\"Morgan\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjgyMzM1\",\"__typename\":\"User\",\"uid\":82335,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-82335-200-E16TJLBugaNb0mmUQL0ccYJODJRsNQfF.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Pasquale-Ferrara\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6ODIzMzU6TEFUTg==\",\"reverseOrder\":false,\"givenName\":\"Pasquale\",\"familyName\":\"Ferrara\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjE5MDQ0Ng==\",\"__typename\":\"User\",\"uid\":190446,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-190446-200-ajLITij6qAekXQEjR45Eg78gBCYK9tx8.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Sreeprasad-Govindankutty\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MTkwNDQ2OkxBVE4=\",\"reverseOrder\":false,\"givenName\":\"Sreeprasad\",\"familyName\":\"Govindankutty\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjIwNDkyNg==\",\"__typename\":\"User\",\"uid\":204926,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-204926-200-ordbxnampihthxppkjhcqsqtvzmgjppm.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Len-Lattanzi\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MjA0OTI2OkxBVE4=\",\"reverseOrder\":false,\"givenName\":\"Len\",\"familyName\":\"Lattanzi\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjI4NDA3Mw==\",\"__typename\":\"User\",\"uid\":284073,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-284073-200-PWKtC7VMrtHTRR1NpAle9pI64gIKzJuW.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Vikram-Dutt\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6Mjg0MDczOkxBVE4=\",\"reverseOrder\":false,\"givenName\":\"Vikram\",\"familyName\":\"Dutt\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjQ5ODI1Mg==\",\"__typename\":\"User\",\"uid\":498252,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-498252-200-cnMRjDx4abfIdQFCaDCUd0mOz9KLY44F.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Jayesh-Naithani\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NDk4MjUyOkxBVE4=\",\"reverseOrder\":false,\"givenName\":\"Jayesh\",\"familyName\":\"Naithani\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjE3NTM3NTc=\",\"__typename\":\"User\",\"uid\":1753757,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-1753757-200-9FNYZJGCVrYuRKxVBZvDx5eDV5kqqT4G.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Ashish-Rana\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MTc1Mzc1NzpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Ashish\",\"familyName\":\"Rana\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjE5MTY0ODQ=\",\"__typename\":\"User\",\"uid\":1916484,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-1916484-200-jV8Pi6SiiD30qJAx6WVPIieGsgnEhu8D.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Jongjin-Choi\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MTkxNjQ4NDpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Jongjin\",\"familyName\":\"Choi\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjI1MzkxMjg=\",\"__typename\":\"User\",\"uid\":2539128,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-2539128-200-hmizguplqhojnkimcpdyseygpapaelot.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Surya-Tripathi\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MjUzOTEyODpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Surya\",\"familyName\":\"Tripathi\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjI1NDYxNTU=\",\"__typename\":\"User\",\"uid\":2546155,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-2546155-200-wqlwqikjssjjmmtwqrqdajofahlyfihy.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Eyad-Sibai\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MjU0NjE1NTpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Eyad\",\"familyName\":\"Sibai\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjMyODc3ODc=\",\"__typename\":\"User\",\"uid\":3287787,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-3287787-200-bdchlncbpciqlratawugbrozcpkzsfrh.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Bhushan-Chaudhari\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MzI4Nzc4NzpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Bhushan\",\"familyName\":\"Chaudhari\",\"scriptCode\":\"LATN\"},{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MzI4Nzc4NzpERVZB\",\"reverseOrder\":false,\"givenName\":\"\\u092d\\u0942\\u0937\\u0923\",\"familyName\":\"\\u091a\\u094c\\u0927\\u0930\\u0940\",\"scriptCode\":\"DEVA\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjM5NTUzMjE=\",\"__typename\":\"User\",\"uid\":3955321,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-3955321-200-ylotftaslilzsafycltfpqzopotmkvzs.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Robin-Venneman\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6Mzk1NTMyMTpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Robin\",\"familyName\":\"Venneman\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjQwNzAxODY=\",\"__typename\":\"User\",\"uid\":4070186,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-4070186-200-ikcnswcpsksqcbdrheakbrasxatubeiy.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Tim-Siwula\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NDA3MDE4NjpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Tim\",\"familyName\":\"Siwula\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjQyNjg5MjM=\",\"__typename\":\"User\",\"uid\":4268923,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-4268923-200-zhxkaartivpljbwcfbqqedejkmbczsob.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Joe-Graham-1\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NDI2ODkyMzpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Joe\",\"familyName\":\"Graham\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjQzMjIwNjg=\",\"__typename\":\"User\",\"uid\":4322068,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-4322068-200-naeqaecbvhkezhdhefvqzvyieoshceaj.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Mohit-Verma-2\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NDMyMjA2ODpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Mohit\",\"familyName\":\"Verma\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjQzOTc3ODE=\",\"__typename\":\"User\",\"uid\":4397781,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-4397781-200-ikwyeedwlcxtkhpvbiitriymuyuzuoor.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Gautam-Singh\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NDM5Nzc4MTpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Gautam\",\"familyName\":\"Singh\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjQ0ODY5ODk=\",\"__typename\":\"User\",\"uid\":4486989,\"profileImageUrl\":\"https://qsfs.fs.quoracdn.net/-3-images.new_grid.profile_default.png-26-7c13a5749b21f349.png\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Norbert-Madar\\u00e1sz\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NDQ4Njk4OTpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Norbert\",\"familyName\":\"Madar\\u00e1sz\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjQ1Njc2MDM=\",\"__typename\":\"User\",\"uid\":4567603,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-4567603-200-POokDClXcy7s37oGWND8JkkkfHAmYf2Z.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Ashish-Kumar-15\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NDU2NzYwMzpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Ashish\",\"familyName\":\"Kumar\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjQ1Njk2NDY=\",\"__typename\":\"User\",\"uid\":4569646,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-4569646-200-US4xw5sHqIFQ0lOHFzDVOr8sMZLIIYrq.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Vishal-Kanaujia\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NDU2OTY0NjpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Vishal\",\"familyName\":\"Kanaujia\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjQ1NzY0OTA=\",\"__typename\":\"User\",\"uid\":4576490,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-4576490-200-enmkjfuhmpzagebfekoxzuasnbbeesxy.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Bhashkar-Sharma\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NDU3NjQ5MDpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Bhashkar\",\"familyName\":\"Sharma\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjQ2NzM0NDM=\",\"__typename\":\"User\",\"uid\":4673443,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-4673443-200-z9MzCIdt7vGUAPSq7EIbhx7efDtJqbeZ.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Vikky-Agrawal\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NDY3MzQ0MzpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Vikky\",\"familyName\":\"Agrawal\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjUyNTUyNTk=\",\"__typename\":\"User\",\"uid\":5255259,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-5255259-200-ra8oeliggRvQBEsUV6e865RImkTZ7S0S.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Saurabh-Yadav\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NTI1NTI1OTpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Saurabh\",\"familyName\":\"Yadav\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjUzNTYyNTQ=\",\"__typename\":\"User\",\"uid\":5356254,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-5356254-200-HvuAJB7fh22RkbGSBJXZt0GyNinJTvgM.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Rahul-Walkar\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NTM1NjI1NDpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Rahul\",\"familyName\":\"Walkar\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjU3MzY5MTc=\",\"__typename\":\"User\",\"uid\":5736917,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-5736917-200-IxphkbLn64RoENkQ3cMCXluuuYsz1L1o.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Devansh-Gupta\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NTczNjkxNzpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Devansh\",\"familyName\":\"Gupta\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjU4NDcxODc=\",\"__typename\":\"User\",\"uid\":5847187,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-5847187-200-fblvcxpotumaivknumcjijhogdbkkwnw.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Ankur-Sharma-12\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NTg0NzE4NzpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Ankur\",\"familyName\":\"Sharma\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjU5NjYwODI=\",\"__typename\":\"User\",\"uid\":5966082,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-5966082-200-jzbjbzsmutjfnytfjmwalubrvbfaimij.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Gianluca-Tranchedone\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NTk2NjA4MjpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Gianluca\",\"familyName\":\"Tranchedone\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjYzNDg4MzY=\",\"__typename\":\"User\",\"uid\":6348836,\"profileImageUrl\":\"https://qsfs.fs.quoracdn.net/-3-images.new_grid.profile_default.png-26-7c13a5749b21f349.png\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Ram-Narayan-Kaushik\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NjM0ODgzNjpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Ram\",\"familyName\":\"Narayan Kaushik\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjY1MjY4OTI=\",\"__typename\":\"User\",\"uid\":6526892,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-6526892-200-pztbnsfzdhnpvbywxclzvbnblxewsbtg.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Arief-Rakhman\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NjUyNjg5MjpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Arief\",\"familyName\":\"Rakhman\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjY4OTM0NjQ=\",\"__typename\":\"User\",\"uid\":6893464,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-6893464-200-wgGeLCCtABAI2pB28h72zPOhvgDpOsfO.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Satyam-Kumar-Shivam\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6Njg5MzQ2NDpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Satyam\",\"familyName\":\"Kumar Shivam\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjcwNjUzODI=\",\"__typename\":\"User\",\"uid\":7065382,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-7065382-200-fhdhadbbfuvocsfeguvpjdzffodpisxn.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Ajay-Reddy-1\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6NzA2NTM4MjpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Ajay\",\"familyName\":\"Reddy\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjgyOTI3OTk=\",\"__typename\":\"User\",\"uid\":8292799,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-8292799-200-kkkwfwjgldfptbakpsfczumtlnloekyj.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Ashish-Tanwer\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6ODI5Mjc5OTpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Ashish\",\"familyName\":\"Tanwer\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjgzOTk1ODY=\",\"__typename\":\"User\",\"uid\":8399586,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-8399586-200-f11umn9lPW5n8LdsbsNOD6ETNuqSR0im.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Vishvajit-Pathak\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6ODM5OTU4NjpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Vishvajit\",\"familyName\":\"Pathak\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjg0Njk0MTI=\",\"__typename\":\"User\",\"uid\":8469412,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-8469412-200-vypzecohvdzocasnlmxqgxenieekweis.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Udit-Sharma-9\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6ODQ2OTQxMjpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Udit\",\"familyName\":\"Sharma\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjg1NzY0NDk=\",\"__typename\":\"User\",\"uid\":8576449,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-8576449-200-wcpaebwnqfylagwtszzrgithkgwjtnya.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Sachin-Kalkur\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6ODU3NjQ0OTpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Sachin\",\"familyName\":\"Kalkur\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjg4NzYzNTQ=\",\"__typename\":\"User\",\"uid\":8876354,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-8876354-200-tzrbmggzvqrwxtqnzvpmxbwxnpqtamqk.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Aditya-Joshee\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6ODg3NjM1NDpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Aditya\",\"familyName\":\"Joshee\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjg4OTEyMTY=\",\"__typename\":\"User\",\"uid\":8891216,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-8891216-200-v1irdV8rUHdFK70ALG53CBfHsnNlkiKP.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Rishabh-Puri\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6ODg5MTIxNjpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Rishabh\",\"familyName\":\"Puri\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjkwNzg2MTQ=\",\"__typename\":\"User\",\"uid\":9078614,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-9078614-200-Yg0qWdQ00QZbXKFCrVzrle9jggtGUPwy.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Tyler-Durden-398\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6OTA3ODYxNDpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Tyler\",\"familyName\":\"Durden\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjkyMDA3MDM=\",\"__typename\":\"User\",\"uid\":9200703,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-9200703-200-yzplybrwvlujawyikoqdqzsqhnkdeekn.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Vignesh-Sr\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6OTIwMDcwMzpMQVRO\",\"reverseOrder\":false,\"givenName\":\"Vignesh\",\"familyName\":\"Sr\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]}],\"id\":\"VHJpYmVAMDo0MTQ0MjM=\",\"__typename\":\"Tribe\",\"handle\":\"q/techiedelight\",\"viewerPendingInvitesToTribe\":[],\"settings\":{\"id\":\"VHJpYmVTZXR0aW5nc0AwOjQxNDQyMw==\",\"__typename\":\"TribeSettings\",\"hasCommentPolicy\":false,\"rules\":\"{\\\"sections\\\": [{\\\"spans\\\": [{\\\"text\\\": \\\"Techie Delight - Coding made easy\\\", \\\"modifiers\\\": {\\\"link\\\": {\\\"type\\\": \\\"url\\\", \\\"url\\\": \\\"http://techiedelight.com\\\"}}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}, {\\\"spans\\\": [{\\\"text\\\": \\\"Technical Interview preparation for cracking top IT companies\\\", \\\"modifiers\\\": {}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}]}\"},\"followerCount\":1671,\"url\":\"/q/kqxqbzywcunzbyyp\",\"numAdmins\":2,\"numModerators\":0,\"numContributors\":107,\"socialFollowers\":[],\"moderators\":[],\"admins\":[{\"id\":\"VXNlckAwOjIyOTk5NzIzOA==\",\"__typename\":\"User\",\"uid\":229997238,\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-229997238-200-bbmpiwigvlqcufxunkcytdqdynlarjln.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Vivek-Srivastava-266\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MjI5OTk3MjM4OkxBVE4=\",\"reverseOrder\":false,\"givenName\":\"Vivek\",\"familyName\":\"Srivastava\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]},{\"id\":\"VXNlckAwOjgwODM1MzgwMw==\",\"__typename\":\"User\",\"uid\":808353803,\"profileImageUrl\":\"https://qsfs.fs.quoracdn.net/-3-images.new_grid.profile_default.png-26-7c13a5749b21f349.png\",\"isVerified\":false,\"businessStatus\":null,\"isAnon\":false,\"profileUrl\":\"/profile/Dan-Pickett-14\",\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6ODA4MzUzODAzOkxBVE4=\",\"reverseOrder\":false,\"givenName\":\"Dan\",\"familyName\":\"Pickett\",\"scriptCode\":\"LATN\"}],\"adminNames\":[]}],\"tribeId\":414423,\"viewerPermission\":null,\"iconUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-ti-414423-100-yukrawdqoyxvcvwblyvexdhjmurucwri.jpeg\",\"name\":\"{\\\"sections\\\": [{\\\"spans\\\": [{\\\"text\\\": \\\"Techie Delight\\\", \\\"modifiers\\\": {}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}]}\",\"description\":\"{\\\"sections\\\": [{\\\"spans\\\": [{\\\"text\\\": \\\"Huge collection of data structures articles for cracking technical interviews.\\\", \\\"modifiers\\\": {}}], \\\"indent\\\": 0, \\\"quoted\\\": false, \\\"type\\\": \\\"plain\\\", \\\"is_rtl\\\": false}]}\",\"isFollowing\":false,\"viewerCanAdmin\":false,\"viewerCanModerate\":false,\"viewerCanContribute\":false,\"notifStatus\":null,\"viewerIsBlockedByTribe\":false,\"colorHex\":\"#2074AC\",\"coverPhotoUrl\":\"https://qphs.fs.quoracdn.net/main-custom-tc-414423-656x164-lirgvwerlmxkjqlfdlgwtmjwzuudqdjs.jpeg\",\"coverPhotoRetinaUrl\":\"https://qphs.fs.quoracdn.net/main-custom-tc-414423-1312x328-lirgvwerlmxkjqlfdlgwtmjwzuudqdjs.jpeg\",\"isMuted\":false,\"viewerIsOnlyAdmin\":false,\"owner\":null,\"facebookNetworkShareUrl\":\"https://www.quora.com/q/techiedelight?ch=1&share=c5334231\",\"twitterNetworkShareUrl\":\"https://www.twitter.com/intent/tweet?lang=en&related=quora&text=&url=https%3A%2F%2Fwww.quora.com%2Fq%2Ftechiedelight%3Fch%3D2\",\"whatsAppShareUrl\":\"https://wa.me/?text=https%3A//www.quora.com/q/techiedelight%3Fch%3D3%26share%3Dc5334231\",\"viewerHasReported\":false,\"reportUrl\":null,\"shouldBadgeTribeDashboardButton\":false,\"followerCountViewerIsFollowing\":0,\"followersViewerIsFollowing\":[],\"pageTabs\":[{\"id\":\"UGFnZVRhYkAwOjQxNDQyMzptYWlu\",\"__typename\":\"PageTab\",\"tabType\":\"main\",\"hasBadge\":false,\"url\":\"/q/techiedelight\"},{\"id\":\"UGFnZVRhYkAwOjQxNDQyMzpwZW9wbGU=\",\"__typename\":\"PageTab\",\"tabType\":\"people\",\"hasBadge\":false,\"url\":\"/q/techiedelight/people\"}],\"viewerCanCreateContentQueueItem\":false,\"viewerCanCreateAnswerSubmissions\":false},\"tribeItemType\":\"PostTribeItem\",\"author\":{\"id\":\"VXNlckAwOjIyOTk5NzIzOA==\",\"__typename\":\"User\",\"isDeleted\":false,\"isAnon\":false,\"uid\":229997238,\"useTranslatedName\":false,\"names\":[{\"__typename\":\"UserName\",\"id\":\"VXNlck5hbWU6MjI5OTk3MjM4OkxBVE4=\",\"reverseOrder\":false,\"givenName\":\"Vivek\",\"familyName\":\"Srivastava\",\"scriptCode\":\"LATN\"}],\"adminNames\":[],\"profileUrl\":\"/profile/Vivek-Srivastava-266\",\"profileImageUrl\":\"https://qphs.fs.quoracdn.net/main-thumb-229997238-200-bbmpiwigvlqcufxunkcytdqdynlarjln.jpeg\",\"isVerified\":false,\"businessStatus\":null,\"viewerNumOfKnownFollowers\":0,\"allTimePublicAnswerViews\":0,\"allTimePublicContentViews\":0,\"topWriterYears\":[],\"topAskerYears\":[],\"numPrizeWinningAnswers\":0,\"numCanContributeTribes\":2,\"sessions\":[],\"publishers\":[],\"publishedUrl\":\"/profile/Vivek-Srivastava-266/answers/published\",\"lastMonthPublicContentViews\":0,\"viewerSocialProofUsers\":[],\"socialProofUrl\":\"\",\"isFollowing\":false,\"followerCount\":513,\"viewerIsFollowedBy\":false,\"isSubscribed\":false,\"latestPrizeWinningAnswer\":null,\"workCredentials\":[],\"schoolCredentials\":[],\"locationCredentials\":[],\"languageCredentials\":[],\"profileCredential\":null,\"viewerCanMessage\":false,\"shareUrl\":\"/profile/Vivek-Srivastava-266/share\",\"isMuted\":false,\"isBlockedByViewer\":false,\"hasBeenReportedByViewer\":false,\"reportUrl\":\"/report?type=user&key=RfmSWTsVse7\",\"showTwitterOnProfile\":true,\"twitterProfileUrl\":null}},\"network\":{\"id\":\"TmV0d29yazow\",\"__typename\":\"Network\",\"nid\":0,\"contentLanguageCode\":\"en\"}},\"broadcastId\":\"main-w-chan52-8888-react_yqeoajwzpeuekimp-0B9G\",\"tchannelData\":{\"minSeq\":\"0\",\"channel\":\"main-w-chan52-8888-react_yqeoajwzpeuekimp-0B9G\",\"channelHash\":\"18069410028147762702\",\"boxName\":\"chan52-8888\",\"baseHost\":\"quora.com\",\"targetUrl\":\"\",\"enableWebsocket\":true},\"broadcastData\":{\"categoryToDepkeys\":{\"Viewer:isUniversalLoggedIn:Vmlld2VyQDA6MA==\":[\"LIUS:260971ced2f5da7b5b4268a41656f479\",\"LIUB:b8d7767dd2f5687a681317a47a28543d\"],\"User:languageCredentials:VXNlckAwOjIyOTk5NzIzOA==\":[\"ubc:ccb63cc4dd2f43f68b3ebac513e9c716\",\"IFoU:b55c57137bf56b4b53f32ede126596c3\",\"gsucbt:04dda0be5800fbee8a616b1018cee733\"],\"User:locationCredentials:VXNlckAwOjIyOTk5NzIzOA==\":[\"gsucbt:8894563c445c3e51f4c1f6d146f844af\",\"ubc:ccb63cc4dd2f43f68b3ebac513e9c716\",\"IFoU:b55c57137bf56b4b53f32ede126596c3\"],\"User:schoolCredentials:VXNlckAwOjIyOTk5NzIzOA==\":[\"gsucbt:64df8484ca8742c64806242bfb94091e\",\"ubc:ccb63cc4dd2f43f68b3ebac513e9c716\",\"IFoU:b55c57137bf56b4b53f32ede126596c3\"],\"User:workCredentials:VXNlckAwOjIyOTk5NzIzOA==\":[\"ubc:ccb63cc4dd2f43f68b3ebac513e9c716\",\"IFoU:b55c57137bf56b4b53f32ede126596c3\",\"gsucbt:18d290c7556235ef03f4c01aea79d844\"],\"Post:numDisplayComments:UG9zdEAwOjU0ODUwNDM=\":[\"fucc:dd0b19bbca0fc5e794a27cce00281ceb\"],\"Post:hasPendingEdits:UG9zdEAwOjU0ODUwNDM=\":[\"gSe:bde890f98a6e41a04657a92d90a55921\"],\"PostTribeItem:isTribeItemDeleted:UG9zdFRyaWJlSXRlbUAwOjE4Mzg2NTk=\":[\"tigti:54b2db4d61a6cc1fd40878ddf6f25e75\"],\"PostTribeItem:containsDifferentExistingPin:UG9zdFRyaWJlSXRlbUAwOjE4Mzg2NTk=\":[\"tgpi:0a900cf0e7df63576094cc4f4bad810d\",\"tigti:54b2db4d61a6cc1fd40878ddf6f25e75\"],\"Post:numUpvotes:UG9zdEAwOjU0ODUwNDM=\":[\"uwupr:bc32f5acf380ab264671b8dbffb407d8\"]},\"depkeyToVersion\":{\"tgpi:0a900cf0e7df63576094cc4f4bad810d\":0,\"gSe:bde890f98a6e41a04657a92d90a55921\":0,\"uwupr:bc32f5acf380ab264671b8dbffb407d8\":33,\"LIUB:b8d7767dd2f5687a681317a47a28543d\":0,\"ubc:ccb63cc4dd2f43f68b3ebac513e9c716\":0,\"tigti:54b2db4d61a6cc1fd40878ddf6f25e75\":0,\"LIUS:260971ced2f5da7b5b4268a41656f479\":0,\"fucc:dd0b19bbca0fc5e794a27cce00281ceb\":9,\"gsucbt:18d290c7556235ef03f4c01aea79d844\":0,\"IFoU:b55c57137bf56b4b53f32ede126596c3\":0,\"gsucbt:04dda0be5800fbee8a616b1018cee733\":0,\"gsucbt:8894563c445c3e51f4c1f6d146f844af\":0,\"gsucbt:64df8484ca8742c64806242bfb94091e\":0}}}";
window.ansFrontendGlobals.data.inlineQueryResults.next["0b4d8f599a088fbfd2fb504ffe7d72ca877d4fbedb71d4c11522ae7960309793"] && window.ansFrontendGlobals.data.inlineQueryResults.next["0b4d8f599a088fbfd2fb504ffe7d72ca877d4fbedb71d4c11522ae7960309793"]();</script><script type="text/javascript">window.setWebnodeLoadable({"css_tags":"<link as='style' rel='preload' href='https://qsfs.fs.quoracdn.net/-3-main1.css-27-71c5f83ee1c4c3be.css' /><link href='https://qsfs.fs.quoracdn.net/-3-main1.css-27-71c5f83ee1c4c3be.css' rel='stylesheet' type='text/css' onerror='addAssetErr(this.href)' /><link as='style' rel='preload' href='https://qsfs.fs.quoracdn.net/-3-main2.css-27-28f630072eea1c73.css' /><link href='https://qsfs.fs.quoracdn.net/-3-main2.css-27-28f630072eea1c73.css' rel='stylesheet' type='text/css' onerror='addAssetErr(this.href)' /><link as='style' rel='preload' href='https://qsfs.fs.quoracdn.net/-3-main3.css-27-2a24ca0ae0a5f2f0.css' /><link href='https://qsfs.fs.quoracdn.net/-3-main3.css-27-2a24ca0ae0a5f2f0.css' rel='stylesheet' type='text/css' onerror='addAssetErr(this.href)' /><link as='style' rel='preload' href='https://qsfs.fs.quoracdn.net/-3-ie.css-27-d40a5f9c12cac587.css' /><link href='https://qsfs.fs.quoracdn.net/-3-ie.css-27-d40a5f9c12cac587.css' rel='stylesheet' type='text/css' onerror='addAssetErr(this.href)' /><style type=\"text/css\">.Notif .trcwnokpcupatmbrwtts{width:32px;height:32px}.Notif .photo_text_layout .notif_photo .trcwnokpcupatmbrwtts{border-radius:3px}.Notif .photo_text_layout .notif_photo .trcwnokpcupatmbrwtts{width:32px;height:32px}.Notif .photo_text_layout .notif_photo .trcwnokpcupatmbrwtts .icon{display:inline-block}.SentIconNotif .trcwnokpcupatmbrwtts{width:32px;height:32px;border-radius:3px}.PartnersSentNotif .trcwnokpcupatmbrwtts{background:#c8dae6;height:32px;border-radius:3px}.PartnersAggregateSentNotif .trcwnokpcupatmbrwtts{background:#c8dae6;height:32px;border-radius:3px}.PartnersSentNotif .trcwnokpcupatmbrwtts .icon{margin:4px 0 0 4px;background:0}.PartnersAggregateSentNotif .trcwnokpcupatmbrwtts .icon{margin:4px 0 0 4px;background:0}.feed_card_on .system_a2a_feed .system_a2a_header .ughpearjweewrsowcifq{display:inline-block}.feed_card_on .system_a2a_feed .system_a2a_header .trcwnokpcupatmbrwtts{background-color:#b92b27;display:flex;width:24px;height:24px;margin-right:8px;border-radius:3px}.feed_card_on .system_a2a_feed .system_a2a_header .trcwnokpcupatmbrwtts .icon{width:12px;height:12px;background-size:12px 12px;background-image:url(//qsfs.fs.quoracdn.net/-3-images.logo.icon_q_symbol.svg-26-74d7efa2f9cf9465.svg);background-repeat:no-repeat;background-position:center center;margin:6px 0 0 6px}.HomeMultifeed .SuggestedAMAsBundle div.section_header .ughpearjweewrsowcifq .header_text_main .ama_view_all_link{color:#949494;position:absolute;right:16px}.HomeMultifeed .SuggestedUsersBundle div.section_header .ughpearjweewrsowcifq .header_text_main .ama_view_all_link{color:#949494;position:absolute;right:16px}.HomeMultifeed .SuggestedTopicsBundle div.section_header .ughpearjweewrsowcifq .header_text_main .ama_view_all_link{color:#949494;position:absolute;right:16px}.WriteMain .WriteMultifeed .edit_multifeed_link_wrapper .edit_multifeed_link .trcwnokpcupatmbrwtts{display:inline-block;width:30px;height:30px}.WriteMain .WriteMultifeed .edit_multifeed_link_wrapper .edit_multifeed_link .trcwnokpcupatmbrwtts .icon{vertical-align:-3px}.WriteMain .WriteMultifeed .edit_multifeed_link_wrapper .edit_multifeed_link .trcwnokpcupatmbrwtts .icon:before{font-family:'q-icons';content:':)';font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-shadow:1px 1px 1px rgba(0,0,0,0.004);text-rendering:optimizeLegibility!important;speak:none;color:#949494;font-size:24px;line-height:1;display:inline-block;width:24px;height:24px}.WriteMain .WriteMultifeed .edit_multifeed_link_wrapper .edit_multifeed_link .trcwnokpcupatmbrwtts .icon:before{content:'\\F124'}.WriteMain .WriteMultifeed .section_header .ughpearjweewrsowcifq .header_text_main{float:none;color:#333;font-weight:500;font-size:15px}.WriteMain .WriteMultifeed .section_header .ughpearjweewrsowcifq .header_text_main .user{float:none;color:#333;font-weight:500;font-size:15px}.WriteMain .WriteMultifeed .section_header .ughpearjweewrsowcifq .header_text_main a{color:#333}.WriteMain .WriteMultifeed .section_header .ughpearjweewrsowcifq .header_text_main .user a{color:#333}.WriteMain .WriteMultifeed .section_header .ughpearjweewrsowcifq .header_text_main a:hover{cursor:pointer}.WriteMain .WriteMultifeed .section_header .ughpearjweewrsowcifq .header_text_main .user a:hover{cursor:pointer}.WriteMain .WriteMultifeed .section_header .ughpearjweewrsowcifq .header_text_details:first-letter {text-transform:capitalize}.follow_questions_header .ughpearjweewrsowcifq{float:left}.Bundle .edit_multifeed_link_wrapper .edit_multifeed_link .trcwnokpcupatmbrwtts{display:inline-block;width:30px;height:30px}.Bundle .edit_multifeed_link_wrapper .edit_multifeed_link .trcwnokpcupatmbrwtts .icon{vertical-align:-3px}.Bundle .edit_multifeed_link_wrapper .edit_multifeed_link .trcwnokpcupatmbrwtts .icon:before{font-family:'q-icons';content:':)';font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-shadow:1px 1px 1px rgba(0,0,0,0.004);text-rendering:optimizeLegibility!important;speak:none;color:#949494;font-size:24px;line-height:1;display:inline-block;width:24px;height:24px}.Bundle .edit_multifeed_link_wrapper .edit_multifeed_link .trcwnokpcupatmbrwtts .icon:before{content:'\\F124'}.Bundle .section_header .ughpearjweewrsowcifq{align-self:center;width:100%}.Bundle .section_header .ughpearjweewrsowcifq .header_text_main{float:none;color:#333;font-weight:500;font-size:15px}.Bundle .section_header .ughpearjweewrsowcifq .TopicNameSpan{float:none;color:#333;font-weight:500;font-size:15px}.Bundle .section_header .ughpearjweewrsowcifq .header_text_main .user{float:none;color:#333;font-weight:500;font-size:15px}.Bundle .section_header .ughpearjweewrsowcifq a.user{float:none;color:#333;font-weight:500;font-size:15px}.Bundle .section_header .ughpearjweewrsowcifq .header_text_main a{color:#333}.Bundle .section_header .ughpearjweewrsowcifq .TopicNameSpan a{color:#333}.Bundle .section_header .ughpearjweewrsowcifq .header_text_main .user a{color:#333}.Bundle .section_header .ughpearjweewrsowcifq a.user a{color:#333}.Bundle .section_header .ughpearjweewrsowcifq .header_text_main a:hover{cursor:pointer}.Bundle .section_header .ughpearjweewrsowcifq .TopicNameSpan a:hover{cursor:pointer}.Bundle .section_header .ughpearjweewrsowcifq .header_text_main .user a:hover{cursor:pointer}.Bundle .section_header .ughpearjweewrsowcifq a.user a:hover{cursor:pointer}.Bundle .section_header .ughpearjweewrsowcifq .header_text_details{display:block;font-size:13px;text-transform:none;letter-spacing:0;font-weight:400;color:#949494}.Bundle .section_header .ughpearjweewrsowcifq .header_text_details a{color:#949494}.Bundle .section_header .ughpearjweewrsowcifq .header_text_details a:hover{cursor:pointer}.Bundle .section_header .ughpearjweewrsowcifq .header_text_details:first-letter {text-transform:capitalize}.Bundle .section_header .trcwnokpcupatmbrwtts{display:flex;width:24px;height:24px;margin-right:8px;border-radius:3px;align-self:center}.Bundle .section_header .trcwnokpcupatmbrwtts svg,.Bundle .section_header .trcwnokpcupatmbrwtts span{margin:auto}.section_header .trcwnokpcupatmbrwtts .topic_photo_img{display:flex;width:30px;height:30px;margin-right:8px;border-radius:3px;display:inline-block}.section_header .trcwnokpcupatmbrwtts .profile_photo_img{display:flex;width:30px;height:30px;margin-right:8px;border-radius:50%}.TopicPageLayout .abittogpkeqbsjvceiwz{color:#333;font-weight:500;position:relative;border-bottom:1px solid #e2e2e2;margin-bottom:16px;padding-bottom:8px;font-size:18px;padding-bottom:7px;border-bottom:0}.TopicPageLayout .abittogpkeqbsjvceiwz a{font-size:13px;font-weight:400;position:absolute;right:0;bottom:8px;color:#949494}.TopicPageLayout .abittogpkeqbsjvceiwz a:hover{color:#949494;text-decoration:underline}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button{-webkit-user-select:none;-webkit-touch-callout:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;transition:opacity ease-in-out 100ms,color ease-in-out 100ms,background-color ease-in-out 100ms,border-color ease-in-out 100ms;border-radius:3px;box-shadow:0 1px 1px 0 rgba(200,200,200,0.2);display:inline-block;font-weight:500;outline:0;padding:3px 7px 4px 7px;text-align:center;text-decoration:none;cursor:pointer;background:#3e78ad;color:#fff;border:1px solid #3a66ad;box-shadow:0 1px 1px 0 rgba(200,200,200,0.6);font-weight:inherit;bottom:7px}.lang_ja .TopicPageLayout .abittogpkeqbsjvceiwz a.action_button{font-weight:bold}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button:active{opacity:.6;box-shadow:none}.action_item .TopicPageLayout .abittogpkeqbsjvceiwz a.action_button:active{opacity:1}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button:hover{text-decoration:none}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button .count{background:0;padding:0;margin:0;margin-left:6px;padding-left:6px;transition:opacity ease-in-out 100ms,color ease-in-out 100ms,background-color ease-in-out 100ms,border-color ease-in-out 100ms;position:relative;border-radius:0 3px 3px 0}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button .count:before{content:\"\";transition:opacity ease-in-out 100ms,color ease-in-out 100ms,background-color ease-in-out 100ms,border-color ease-in-out 100ms;width:1px;height:14.5px;position:absolute;left:0;top:2px}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button .no_count{display:none}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button.disabled{opacity:.5;pointer-events:none}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button.submit_button_disabled{opacity:.5;pointer-events:none}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button.fake_disabled{opacity:.5}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button.fake_disabled:hover{cursor:default}.action_item .TopicPageLayout .abittogpkeqbsjvceiwz a.action_button{box-shadow:none;border:0}.action_item .TopicPageLayout .abittogpkeqbsjvceiwz a.action_button:hover{border:0}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button:not(.fake_disabled):hover{border:1px solid #234462}.TopicPageLayout .abittogpkeqbsjvceiwz a.action_button:not(.fake_disabled):focus{box-shadow:inset 1px 0 0 #fff,inset -1px 0 0 #fff,inset 0 1px 0 #fff,inset 0 -1px 0 #fff}.TopicPageLayout .abittogpkeqbsjvceiwz .switcher{font-size:13px;color:#333;font-weight:400;position:absolute;right:0;bottom:8px}.TopicPageLayout .abittogpkeqbsjvceiwz .switcher .current_item{font-weight:500}.TopicPageLayout .abittogpkeqbsjvceiwz .switcher a{position:relative;color:#949494;bottom:auto}.TopicManagePageMain .abittogpkeqbsjvceiwz.locked:after{left:inherit;margin-left:4px}.TopicOrganizePageMain .abittogpkeqbsjvceiwz.locked:after{left:inherit;margin-left:4px}.modal_dismissible_signup_dialog .dialog_wrapper .signup_header .ughpearjweewrsowcifq{position:relative;color:#666;letter-spacing:.5px;font-weight:300;font-size:19px}.modal_signup_dialog .dialog_wrapper .signup_header .ughpearjweewrsowcifq{position:relative;color:#666;letter-spacing:.5px;font-weight:300;font-size:19px}.TopicDigestOptIn .ughpearjweewrsowcifq{margin-left:12px}.wtvyuoymdmioulrclpxx .content_dismiss_title{font-size:15px;font-weight:500;margin-bottom:4px}.wtvyuoymdmioulrclpxx .content_dismiss_body{font-size:13px;color:#666}.EmailConfirmationModal .wrapper .ughpearjweewrsowcifq{padding-top:16px;font-weight:bold;font-size:19px;display:block}.StatsMain .stats_side .ContentListWrapper .ContentListItem .abittogpkeqbsjvceiwz{color:#949494}.StatsMain .stats_side .ContentListWrapper .ContentListItem.is_active .abittogpkeqbsjvceiwz{color:#2b6dad}.PaidContributorSummary .abittogpkeqbsjvceiwz{font-weight:bold}.PaidContributorPolicy .abittogpkeqbsjvceiwz{font-weight:bold}.PaidContributorFAQ .abittogpkeqbsjvceiwz{font-weight:bold}.PartnerPromptsPreviewCarousel .PreviewCarouselItem .trcwnokpcupatmbrwtts{width:24px;height:24px;line-height:24px;border-radius:3px}.PartnersMain .prompt_bundle .header .trcwnokpcupatmbrwtts{width:24px;height:24px;margin-right:8px;border-radius:3px}.PartnersPromptsMain .prompt_bundle .header .trcwnokpcupatmbrwtts{width:24px;height:24px;margin-right:8px;border-radius:3px}.PartnersMain .prompt_bundle.A2APromptBundle .trcwnokpcupatmbrwtts{background:#4b84e0}.PartnersPromptsMain .prompt_bundle.A2APromptBundle .trcwnokpcupatmbrwtts{background:#4b84e0}.TribesInlineFollowSuggestionList .trcwnokpcupatmbrwtts{margin-right:8px}.PaidAdminSummary .abittogpkeqbsjvceiwz{font-weight:bold}.PaidAdminNDA .abittogpkeqbsjvceiwz{font-weight:bold}.PaidAdminEarningsMain .abittogpkeqbsjvceiwz{font-weight:bold}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .abittogpkeqbsjvceiwz{font-size:18px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .htkbwueirwxyjiiwotca{margin-top:1px;right:20px;position:absolute}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj{display:flex;padding:4px 0}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj .fsifgzdvukiuwqygtsvq{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;display:block;font-weight:normal}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj .fsifgzdvukiuwqygtsvq:hover{text-decoration:underline}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj .ughpearjweewrsowcifq{display:flex;width:100%}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj .trcwnokpcupatmbrwtts{border-radius:3px;align-self:center;margin-right:8px;display:inline-block}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj .trcwnokpcupatmbrwtts .account_logo_img{background-size:cover;background-position:center;width:40px;height:40px;border-radius:100%}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj .account_description{display:flex;width:100%}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj .account_description .skgeopkunzowyweywukb{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj .skgeopkunzowyweywukb{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:500}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj .wwgqsynyulqpczyucgeh{font-size:13px;color:#949494}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .lmuqcwxxhvqamgxfoujq{display:inline-block}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .vgjenehwtceygeddfozy{height:1px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .cituqeypbqwhlspkhffu{position:relative;bottom:0}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .qwwgaezefdmjihlqmjdy{position:absolute;top:8px;right:8px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .oosllqmopsrvaknghgkw{padding:16px 0 16px 0;margin:0 -16px;padding-top:4px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .oosllqmopsrvaknghgkw .okgruxfjrphmodqjiwmv{margin-top:4px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .oosllqmopsrvaknghgkw .okgruxfjrphmodqjiwmv .ezurvalyvskefhzfkvnj{box-shadow:inset 0 1px 0 rgba(0,0,0,0.05),inset 0 -1px 0 rgba(0,0,0,0.05),inset 1px 0 0 rgba(0,0,0,0.05),inset -1px 0 0 rgba(0,0,0,0.05);background-color:#fafafa;border-radius:3px;height:96px;width:180px;background-size:contain;background-repeat:no-repeat;background-position:center;margin-top:4px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .oosllqmopsrvaknghgkw .okgruxfjrphmodqjiwmv .ezurvalyvskefhzfkvnj.fjzheuibdasthminxrbo{background-size:cover;background-position:center}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .oosllqmopsrvaknghgkw .okgruxfjrphmodqjiwmv .cnpcrpaxpofkkbecqceg{width:100%;height:0}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg .oosllqmopsrvaknghgkw .dsgykovlwkakwmcssshr{padding-right:8px;margin-bottom:8px}.sxycjbwjpkxwrbxkkqej.qlsdnzxpmmimljuwnqrv.iukhnfbmumykdrhjakpg.jfyssfiaazpshbebstjy .oosllqmopsrvaknghgkw{margin-bottom:0;padding:0 16px 0 16px}.sxycjbwjpkxwrbxkkqej.qlsdnzxpmmimljuwnqrv.iukhnfbmumykdrhjakpg.jfyssfiaazpshbebstjy .htkbwueirwxyjiiwotca{padding-top:3px}.sxycjbwjpkxwrbxkkqej.qlsdnzxpmmimljuwnqrv.iukhnfbmumykdrhjakpg.diprzapirxsmdyjyrlia .oosllqmopsrvaknghgkw{margin-bottom:0;padding:0 16px 0 16px}.sxycjbwjpkxwrbxkkqej.qlsdnzxpmmimljuwnqrv.iukhnfbmumykdrhjakpg.diprzapirxsmdyjyrlia .htkbwueirwxyjiiwotca{padding-top:3px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.jfyssfiaazpshbebstjy{position:relative;margin-top:16px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.jfyssfiaazpshbebstjy .lmuqcwxxhvqamgxfoujq{border-top:0;margin-bottom:4px;padding-top:0;display:inline-block}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.jfyssfiaazpshbebstjy .gmvrzucozgbvcdmnaroi{padding-top:16px;border-top:1px solid #e2e2e2;margin:0 -16px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.jfyssfiaazpshbebstjy .qwwgaezefdmjihlqmjdy{position:absolute;top:8px;right:-8px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.jfyssfiaazpshbebstjy .htkbwueirwxyjiiwotca{right:0;margin-top:4px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.jfyssfiaazpshbebstjy .okgruxfjrphmodqjiwmv .cituqeypbqwhlspkhffu{position:absolute;bottom:8px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.jfyssfiaazpshbebstjy .oosllqmopsrvaknghgkw{margin:0;padding:0}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.jfyssfiaazpshbebstjy .roqhqnwtarqsalzdngoj{margin:0}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.diprzapirxsmdyjyrlia{position:relative;margin-top:16px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.diprzapirxsmdyjyrlia .lmuqcwxxhvqamgxfoujq{border-top:0;margin-bottom:4px;padding-top:0;display:inline-block}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.diprzapirxsmdyjyrlia .gmvrzucozgbvcdmnaroi{padding-top:16px;border-top:1px solid #e2e2e2;margin:0 -16px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.diprzapirxsmdyjyrlia .qwwgaezefdmjihlqmjdy{position:absolute;top:8px;right:-8px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.diprzapirxsmdyjyrlia .htkbwueirwxyjiiwotca{right:0;margin-top:4px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.diprzapirxsmdyjyrlia .okgruxfjrphmodqjiwmv .cituqeypbqwhlspkhffu{position:absolute;bottom:8px}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.diprzapirxsmdyjyrlia .oosllqmopsrvaknghgkw{margin:0;padding:0}.sxycjbwjpkxwrbxkkqej.feed_expand.iukhnfbmumykdrhjakpg.diprzapirxsmdyjyrlia .roqhqnwtarqsalzdngoj{margin:0}.sxycjbwjpkxwrbxkkqej.question_page_content.iukhnfbmumykdrhjakpg .roqhqnwtarqsalzdngoj{padding:12px 0 0 0;border-top:1px solid #e2e2e2;border-bottom:0}.sxycjbwjpkxwrbxkkqej.question_page_content.iukhnfbmumykdrhjakpg .oosllqmopsrvaknghgkw{margin:0;padding:8px 0 16px 0}.sxycjbwjpkxwrbxkkqej.question_page_content.iukhnfbmumykdrhjakpg .oosllqmopsrvaknghgkw .dsgykovlwkakwmcssshr{margin-bottom:8px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv{position:relative;margin-top:16px;margin-top:0}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .lmuqcwxxhvqamgxfoujq{border-top:0;margin-bottom:4px;padding-top:0;display:inline-block}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .gmvrzucozgbvcdmnaroi{padding-top:16px;border-top:1px solid #e2e2e2;margin:0 -16px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .qwwgaezefdmjihlqmjdy{position:absolute;top:8px;right:-8px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .htkbwueirwxyjiiwotca{right:0;margin-top:4px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .okgruxfjrphmodqjiwmv .cituqeypbqwhlspkhffu{position:absolute;bottom:8px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .oosllqmopsrvaknghgkw{margin:0;padding:0}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .gmvrzucozgbvcdmnaroi{padding:0;margin:0;border-top:0}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .qwwgaezefdmjihlqmjdy{display:none}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .lmuqcwxxhvqamgxfoujq{margin-bottom:0;width:100%}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .lmuqcwxxhvqamgxfoujq .fsifgzdvukiuwqygtsvq{width:100%;color:#333;font-size:15px;font-weight:500;border-bottom:1px solid #e2e2e2;padding-bottom:8px;margin-bottom:16px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .dsgykovlwkakwmcssshr{padding:0;margin:0}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .roqhqnwtarqsalzdngoj{border-bottom:0;margin-bottom:0}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .roqhqnwtarqsalzdngoj .trcwnokpcupatmbrwtts .account_logo_img{width:32px;height:32px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .roqhqnwtarqsalzdngoj .fsifgzdvukiuwqygtsvq{font-size:13px;padding-bottom:0}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .roqhqnwtarqsalzdngoj .wwgqsynyulqpczyucgeh{font-weight:400}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .content_flex{flex-direction:column}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .okgruxfjrphmodqjiwmv{margin-top:4px}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.mjcboeyjgdsmjjnrgypv .okgruxfjrphmodqjiwmv .ezurvalyvskefhzfkvnj{margin-bottom:8px;width:100%}.sxycjbwjpkxwrbxkkqej.iukhnfbmumykdrhjakpg.tdblbqheyhbszjekgcpu .dsgykovlwkakwmcssshr{margin-bottom:8px}.sxycjbwjpkxwrbxkkqej{display:inline-block;margin:16px 0 0 0;width:100%;overflow:inherit}.sxycjbwjpkxwrbxkkqej .lmuqcwxxhvqamgxfoujq{font-size:13px;line-height:14px}.reset_qpage_type.sxycjbwjpkxwrbxkkqej .lmuqcwxxhvqamgxfoujq{line-height:1.3125}.sxycjbwjpkxwrbxkkqej .lmuqcwxxhvqamgxfoujq .fsifgzdvukiuwqygtsvq{overflow:hidden;color:#949494;text-decoration:none;display:inline-block}.sxycjbwjpkxwrbxkkqej .lmuqcwxxhvqamgxfoujq .fsifgzdvukiuwqygtsvq:hover{text-decoration:underline}.sxycjbwjpkxwrbxkkqej .lmuqcwxxhvqamgxfoujq .skgeopkunzowyweywukb::first-letter {text-transform:capitalize}.sxycjbwjpkxwrbxkkqej .qwwgaezefdmjihlqmjdy{position:absolute;right:-9px;top:-9px}.sxycjbwjpkxwrbxkkqej .roqhqnwtarqsalzdngoj{position:relative}.sxycjbwjpkxwrbxkkqej .gmjlydaviedvbceeywck{color:inherit;display:block;text-decoration:inherit;overflow:auto}.sxycjbwjpkxwrbxkkqej .abittogpkeqbsjvceiwz{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:bold;color:#333;text-decoration:inherit;line-height:23px;font-size:18px;margin-bottom:4px}.sxycjbwjpkxwrbxkkqej .abittogpkeqbsjvceiwz:hover{text-decoration:underline}.reset_qpage_type.sxycjbwjpkxwrbxkkqej .abittogpkeqbsjvceiwz{line-height:1.3125}.sxycjbwjpkxwrbxkkqej .dsgykovlwkakwmcssshr{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;text-decoration:inherit;line-height:24px}.reset_qpage_type.sxycjbwjpkxwrbxkkqej .dsgykovlwkakwmcssshr{line-height:1.3125}.body_14.reset_qpage_type.sxycjbwjpkxwrbxkkqej .dsgykovlwkakwmcssshr{font-size:14px}.body_15.reset_qpage_type.sxycjbwjpkxwrbxkkqej .dsgykovlwkakwmcssshr{font-size:15px}.sxycjbwjpkxwrbxkkqej .okgruxfjrphmodqjiwmv{position:relative;z-index:1}.sxycjbwjpkxwrbxkkqej .okgruxfjrphmodqjiwmv::after{clear:both;content:\" \";display:block}.sxycjbwjpkxwrbxkkqej .okgruxfjrphmodqjiwmv .htkbwueirwxyjiiwotca{position:absolute;right:0;top:50%;-webkit-transform:translate(0,-50%);-ms-transform:translate(0,-50%);transform:translate(0,-50%)}.sxycjbwjpkxwrbxkkqej .vgjenehwtceygeddfozy .cituqeypbqwhlspkhffu{color:#666;display:inline-block;position:relative;padding:8px 12px 8px 35px;font-size:14px;background-image:url(//qsfs.fs.quoracdn.net/-3-images.ui.icons.external_link.svg-26-00368acb38107c3e.svg);background-repeat:no-repeat;background-position:8px center;background-size:24px;line-height:24px;font-weight:500;box-sizing:border-box;margin-left:-10px;margin-bottom:-12px}.sxycjbwjpkxwrbxkkqej .vgjenehwtceygeddfozy .cituqeypbqwhlspkhffu:hover{text-decoration:none;border-radius:40px;background-color:#fafafa}.sxycjbwjpkxwrbxkkqej .undo{color:#949494;text-decoration:none;font-size:13px;cursor:pointer}.sxycjbwjpkxwrbxkkqej.qlsdnzxpmmimljuwnqrv.jfyssfiaazpshbebstjy{margin-top:0}.sxycjbwjpkxwrbxkkqej.qlsdnzxpmmimljuwnqrv.jfyssfiaazpshbebstjy .lmuqcwxxhvqamgxfoujq{margin-bottom:4px}.sxycjbwjpkxwrbxkkqej.qlsdnzxpmmimljuwnqrv.diprzapirxsmdyjyrlia{margin-top:0}.sxycjbwjpkxwrbxkkqej.qlsdnzxpmmimljuwnqrv.diprzapirxsmdyjyrlia .lmuqcwxxhvqamgxfoujq{margin-bottom:4px}.sxycjbwjpkxwrbxkkqej.qlsdnzxpmmimljuwnqrv.diprzapirxsmdyjyrlia .abittogpkeqbsjvceiwz{margin-bottom:4px;padding-bottom:0}.sxycjbwjpkxwrbxkkqej.feed_expand.jfyssfiaazpshbebstjy{margin:16px 0 0 0}.sxycjbwjpkxwrbxkkqej.feed_expand.jfyssfiaazpshbebstjy .roqhqnwtarqsalzdngoj{margin:0 -16px}.sxycjbwjpkxwrbxkkqej.feed_expand.jfyssfiaazpshbebstjy .roqhqnwtarqsalzdngoj .lmuqcwxxhvqamgxfoujq{border-top:1px solid #e2e2e2;padding:16px 16px 0 16px;margin-bottom:4px}.sxycjbwjpkxwrbxkkqej.feed_expand.jfyssfiaazpshbebstjy .abittogpkeqbsjvceiwz{display:inline-block;border-bottom:0;padding-bottom:0}.sxycjbwjpkxwrbxkkqej.feed_expand.jfyssfiaazpshbebstjy .wtvyuoymdmioulrclpxx{border-top:1px solid #e2e2e2;padding-top:16px}.sxycjbwjpkxwrbxkkqej.feed_expand.jfyssfiaazpshbebstjy .qwwgaezefdmjihlqmjdy{position:absolute;right:7px;top:7px}.sxycjbwjpkxwrbxkkqej.feed_expand.diprzapirxsmdyjyrlia{margin:16px 0 0 0}.sxycjbwjpkxwrbxkkqej.feed_expand.diprzapirxsmdyjyrlia .roqhqnwtarqsalzdngoj{margin:0 -16px}.sxycjbwjpkxwrbxkkqej.feed_expand.diprzapirxsmdyjyrlia .roqhqnwtarqsalzdngoj .lmuqcwxxhvqamgxfoujq{border-top:1px solid #e2e2e2;padding:16px 16px 0 16px;margin-bottom:4px}.sxycjbwjpkxwrbxkkqej.feed_expand.diprzapirxsmdyjyrlia .abittogpkeqbsjvceiwz{display:inline-block;border-bottom:0;padding-bottom:0}.sxycjbwjpkxwrbxkkqej.feed_expand.diprzapirxsmdyjyrlia .wtvyuoymdmioulrclpxx{border-top:1px solid #e2e2e2;padding-top:16px}.sxycjbwjpkxwrbxkkqej.feed_expand.diprzapirxsmdyjyrlia .qwwgaezefdmjihlqmjdy{position:absolute;right:7px;top:7px}.sxycjbwjpkxwrbxkkqej.mjcboeyjgdsmjjnrgypv{margin-top:0}.sxycjbwjpkxwrbxkkqej.mjcboeyjgdsmjjnrgypv .roqhqnwtarqsalzdngoj{margin-bottom:16px;font-weight:500;border-bottom:1px solid #e2e2e2}.sxycjbwjpkxwrbxkkqej.mjcboeyjgdsmjjnrgypv .roqhqnwtarqsalzdngoj .fsifgzdvukiuwqygtsvq{color:#333;font-size:15px;padding-bottom:8px}.sxycjbwjpkxwrbxkkqej.mjcboeyjgdsmjjnrgypv .roqhqnwtarqsalzdngoj .fsifgzdvukiuwqygtsvq:hover{text-decoration:none}.sxycjbwjpkxwrbxkkqej.mjcboeyjgdsmjjnrgypv .abittogpkeqbsjvceiwz{font-size:15px}.sxycjbwjpkxwrbxkkqej.mjcboeyjgdsmjjnrgypv .dsgykovlwkakwmcssshr{font-size:14px;line-height:21px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl .abittogpkeqbsjvceiwz{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-size:16px;line-height:1.75;font-size:18px;line-height:28px;margin-bottom:0}.reset_qpage_type.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl .abittogpkeqbsjvceiwz{line-height:1.3125;margin-bottom:4px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl .dsgykovlwkakwmcssshr{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-size:16px;line-height:1.75;line-height:28px}.reset_qpage_type.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl .dsgykovlwkakwmcssshr{line-height:1.3125}.body_14.reset_qpage_type.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl .dsgykovlwkakwmcssshr{font-size:14px}.body_15.reset_qpage_type.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl .dsgykovlwkakwmcssshr{font-size:15px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl .cituqeypbqwhlspkhffu{color:#666;display:inline-block;position:relative;padding:8px 12px 8px 35px;font-size:14px;background-image:url(//qsfs.fs.quoracdn.net/-3-images.ui.icons.external_link.svg-26-00368acb38107c3e.svg);background-repeat:no-repeat;background-position:8px center;background-size:24px;line-height:24px;font-weight:500;box-sizing:border-box;margin-left:-10px;margin-bottom:-12px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl .cituqeypbqwhlspkhffu:hover{text-decoration:none;border-radius:40px;background-color:#fafafa}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl .qwwgaezefdmjihlqmjdy{display:none}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.ovwzdidejnvjtrfdqrme{margin:0 0 16px 0}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.ovwzdidejnvjtrfdqrme .lmuqcwxxhvqamgxfoujq{border-top:1px solid #e2e2e2;border-bottom:0;padding-top:16px;margin-bottom:0}.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr{margin-bottom:8px;margin-top:0}.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .lmuqcwxxhvqamgxfoujq{font-size:13px;line-height:14px;border-bottom:0;margin-bottom:0;border-top:1px solid #e2e2e2;padding-top:16px}.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .lmuqcwxxhvqamgxfoujq .fsifgzdvukiuwqygtsvq{color:#949494;text-decoration:none;display:inline-block}.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .lmuqcwxxhvqamgxfoujq .fsifgzdvukiuwqygtsvq:hover{text-decoration:none}.reset_qpage_type.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .lmuqcwxxhvqamgxfoujq{line-height:1.3125}.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .skgeopkunzowyweywukb{color:#949494}.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .abittogpkeqbsjvceiwz{font-size:16px;line-height:28px}.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .dsgykovlwkakwmcssshr{font-size:16px;line-height:28px}.reset_qpage_type.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .abittogpkeqbsjvceiwz{line-height:1.3125;font-size:18px}.body_14.reset_qpage_type.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .dsgykovlwkakwmcssshr{line-height:1.3125;font-size:14px}.body_15.reset_qpage_type.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .dsgykovlwkakwmcssshr{line-height:1.3125;font-size:15px}.sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr .cituqeypbqwhlspkhffu{font-size:14px}.sxycjbwjpkxwrbxkkqej.regular_text .abittogpkeqbsjvceiwz{font-size:15px;line-height:26px}.sxycjbwjpkxwrbxkkqej.regular_text .dsgykovlwkakwmcssshr{font-size:15px;line-height:26px}.reset_qpage_type.sxycjbwjpkxwrbxkkqej.regular_text .abittogpkeqbsjvceiwz{line-height:1.3125}.reset_qpage_type.sxycjbwjpkxwrbxkkqej.regular_text .dsgykovlwkakwmcssshr{line-height:1.3125}.body_14.reset_qpage_type.sxycjbwjpkxwrbxkkqej.regular_text .abittogpkeqbsjvceiwz{font-size:14px}.body_14.reset_qpage_type.sxycjbwjpkxwrbxkkqej.regular_text .dsgykovlwkakwmcssshr{font-size:14px}.body_15.reset_qpage_type.sxycjbwjpkxwrbxkkqej.regular_text .abittogpkeqbsjvceiwz{font-size:15px}.body_15.reset_qpage_type.sxycjbwjpkxwrbxkkqej.regular_text .dsgykovlwkakwmcssshr{font-size:15px}.logged_out .sxycjbwjpkxwrbxkkqej.sckslncggqdapqodolxr{margin-top:0}.sxycjbwjpkxwrbxkkqej.tznlgiuqdviirfauegfe{margin-top:0;background-color:#fff;padding-bottom:24px}.sxycjbwjpkxwrbxkkqej.tznlgiuqdviirfauegfe .roqhqnwtarqsalzdngoj{margin-bottom:16px;font-weight:500;border-bottom:1px solid #e2e2e2}.sxycjbwjpkxwrbxkkqej.tznlgiuqdviirfauegfe .roqhqnwtarqsalzdngoj .fsifgzdvukiuwqygtsvq{color:#333;font-size:15px;padding-bottom:8px}.sxycjbwjpkxwrbxkkqej.tznlgiuqdviirfauegfe .roqhqnwtarqsalzdngoj .fsifgzdvukiuwqygtsvq:hover{text-decoration:none}.sxycjbwjpkxwrbxkkqej.tznlgiuqdviirfauegfe .abittogpkeqbsjvceiwz{font-size:15px}.sxycjbwjpkxwrbxkkqej.tznlgiuqdviirfauegfe .dsgykovlwkakwmcssshr{font-size:14px;line-height:21px}.sxycjbwjpkxwrbxkkqej.tznlgiuqdviirfauegfe .roqhqnwtarqsalzdngoj{margin-bottom:12px}.sxycjbwjpkxwrbxkkqej.mhbnzcqimiwwereqkteh{margin-top:0}.sxycjbwjpkxwrbxkkqej.mhbnzcqimiwwereqkteh .lmuqcwxxhvqamgxfoujq{margin-bottom:4px}.sxycjbwjpkxwrbxkkqej.mhbnzcqimiwwereqkteh .lmuqcwxxhvqamgxfoujq .fsifgzdvukiuwqygtsvq:hover{text-decoration:none}.sxycjbwjpkxwrbxkkqej.mhbnzcqimiwwereqkteh.feed_expand:hover .roqhqnwtarqsalzdngoj .lmuqcwxxhvqamgxfoujq{border-color:#e2e2e2}.sxycjbwjpkxwrbxkkqej.mhbnzcqimiwwereqkteh.feed_expand .roqhqnwtarqsalzdngoj{margin:0 -16px}.sxycjbwjpkxwrbxkkqej.mhbnzcqimiwwereqkteh.feed_expand .roqhqnwtarqsalzdngoj .lmuqcwxxhvqamgxfoujq{padding-left:16px;padding-right:16px;border-color:#efefef}.sxycjbwjpkxwrbxkkqej.mhbnzcqimiwwereqkteh.feed_expand .qwwgaezefdmjihlqmjdy{right:7px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme{padding-bottom:0;margin-bottom:0;position:relative}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme .opdkmbrdangzhqvyjxpp:hover .promoted_answer_link{text-decoration:underline}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme .AnswerBase{border-top:0;padding-top:0}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme .AnswerHeader{margin-top:8px;z-index:51}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme .question_title{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:bold;line-height:23px;font-size:16px;color:#333}.body_14 .sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme .question_title{line-height:1.3125;font-size:18px}.body_15 .sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme .question_title{line-height:1.3125;font-size:18px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme .lmuqcwxxhvqamgxfoujq{color:#949494;z-index:51;position:relative}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme .ovsbyxcxjmpuobjbswgy{position:absolute;top:0;left:0;bottom:0;right:0;z-index:50}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme .opdkmbrdangzhqvyjxpp:hover .promoted_answer_link{text-decoration:none}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.ovwzdidejnvjtrfdqrme .AnswerBase{border-top:0;padding-top:4px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.sckslncggqdapqodolxr{padding-bottom:0;margin-bottom:0;position:relative}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.sckslncggqdapqodolxr .opdkmbrdangzhqvyjxpp:hover .promoted_answer_link{text-decoration:underline}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.sckslncggqdapqodolxr .AnswerBase{border-top:0;padding-top:0}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.sckslncggqdapqodolxr .AnswerHeader{margin-top:8px;z-index:51}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.sckslncggqdapqodolxr .question_title{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:bold;line-height:23px;font-size:16px;color:#333}.body_14 .sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.sckslncggqdapqodolxr .question_title{line-height:1.3125;font-size:18px}.body_15 .sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.sckslncggqdapqodolxr .question_title{line-height:1.3125;font-size:18px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.sckslncggqdapqodolxr .lmuqcwxxhvqamgxfoujq{color:#949494;z-index:51;position:relative}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.sckslncggqdapqodolxr .ovsbyxcxjmpuobjbswgy{position:absolute;top:0;left:0;bottom:0;right:0;z-index:50}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.sckslncggqdapqodolxr .question_title{display:block;margin-bottom:4px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe{padding-bottom:0;margin-bottom:0;position:relative}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .opdkmbrdangzhqvyjxpp:hover .promoted_answer_link{text-decoration:underline}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .AnswerBase{border-top:0;padding-top:0}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .AnswerHeader{margin-top:8px;z-index:51}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .question_title{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:bold;line-height:23px;font-size:16px;color:#333}.body_14 .sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .question_title{line-height:1.3125;font-size:18px}.body_15 .sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .question_title{line-height:1.3125;font-size:18px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .lmuqcwxxhvqamgxfoujq{color:#949494;z-index:51;position:relative}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .ovsbyxcxjmpuobjbswgy{position:absolute;top:0;left:0;bottom:0;right:0;z-index:50}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .PromotedQuestionPageAnswer div{font-size:14px!important}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .lmuqcwxxhvqamgxfoujq{margin-bottom:0;width:100%}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .lmuqcwxxhvqamgxfoujq .fsifgzdvukiuwqygtsvq{width:100%;color:#333;font-size:15px;font-weight:500;border-bottom:1px solid #e2e2e2;padding-bottom:8px;margin-bottom:8px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .question_title{display:block;margin-bottom:4px}.sxycjbwjpkxwrbxkkqej.zjhcjfydrafcjucpexsl.mhbnzcqimiwwereqkteh.tznlgiuqdviirfauegfe .question_title span{font-size:15px;line-height:1.4}.LeadGenForm .trcwnokpcupatmbrwtts{border-radius:3px;align-self:center;display:inline-block}.LeadGenFormSubmissionConfirmation .trcwnokpcupatmbrwtts{border-radius:3px;align-self:center;display:inline-block}.LeadGenForm .trcwnokpcupatmbrwtts .account_logo_img{background-size:cover;background-position:center;width:40px;height:40px;border-radius:100%}.LeadGenFormSubmissionConfirmation .trcwnokpcupatmbrwtts .account_logo_img{background-size:cover;background-position:center;width:40px;height:40px;border-radius:100%}.tdblbqheyhbszjekgcpu .gmjlydaviedvbceeywck{cursor:pointer}.FeedStory .mzqnjnfjiemwoaweaols{margin-bottom:-16px;width:calc(100% + 32px);margin-left:-16px;border-width:1px;border-color:#e2e2e2;border-radius:0;border-top-style:solid}.mjcboeyjgdsmjjnrgypv .mzqnjnfjiemwoaweaols{margin-bottom:-16px;width:calc(100% + 32px);margin-left:-16px;border-width:1px;border-color:#e2e2e2;border-radius:0;border-top-style:solid}.tdblbqheyhbszjekgcpu .oosllqmopsrvaknghgkw{margin-bottom:16px}.tdblbqheyhbszjekgcpu.zjhcjfydrafcjucpexsl .oosllqmopsrvaknghgkw{margin-bottom:0}.tdblbqheyhbszjekgcpu.zjhcjfydrafcjucpexsl .okgruxfjrphmodqjiwmv{display:flex}.tdblbqheyhbszjekgcpu.zjhcjfydrafcjucpexsl .mzqnjnfjiemwoaweaols{flex:1;margin-left:-12px}.ZapdosWall .ughpearjweewrsowcifq{font-size:19px}</style>","html":"<div id='__w2_modal_container_'><div class='modal_overlay hidden' id='__w2_modal_overlay_'><div class='modal_wrapper normal' id='__w2_modal_wrapper_'></div></div></div><div id='wBMIexxM10'></div><div id='wBMIexxM12'></div><div id='__w2_wBMIexxM1_signup_wall_wrapper'></div><div class='__live_spinner hidden' id='__w2_wBMIexxM19_loading'><div class='__live_spinner_indicator' id='__w2_wBMIexxM19_spinner'></div></div><div class='PMsgContainer' id='__w2_wBMIexxM20_pmsg_container'></div><div id='wBMIexxM21'></div><div id='wBMIexxM23'></div>","scripts":{"entry":"https://qsfs.fs.quoracdn.net/-3-web.entry.js.out-34-2964ab48428ef2bd.webpack","chunks":["https://qsfs.fs.quoracdn.net/-3-chunk.web.main.js.out-34-aa0672756936d0ab.webpack"]},"js":{"settings":{"action":"tribe_item","actionTrail":null,"batchedServerCallUrl":"/webnode2/batched_server_call_POST","clientLogTrail":null,"componentInspector":false,"controller":"tribes","cookiePrefix":"m","debug":false,"enableFrameBusting":false,"fbLanguageCode":"en_US","formatted_tab_titles":{"feed":{"title":"Home"},"openqs":{"title":"Answer"},"notifs":{"title":"Notifs"},"more":{"title":"More"},"profile":{"title":"You"},"videos":{"title":"Videos"},"spaces":{"title":"Spaces"},"language":"en"},"formkey":"64a63727ef277c85cfcce670f2d096a7","googleClientId":"917071888555.apps.googleusercontent.com","googleCookiePolicy":"http://quora.com","instance":"main","interfaceLanguage":"en","interface_strings":{"ok":"OK","done":"Done","cancel":"Cancel","update":"Update","please_refresh":"Please refresh this page to receive new updates.","please_try_again":"Something went wrong. Please try again.","in_progress_warning":"Warning: Your work in progress has not been saved. Leaving or reloading this page will discard any unsaved changes.","trying_to_regain":"Trying to regain internet connection..."},"javascript_error_overlay":false,"datetime_strings":{"en":{"dayMonthTemplate":"{month} {day}","dayMonthYearTemplate":"{month} {day} {year}","monthNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"timeAbbrevs":["d","h","m","s"],"justNow":"just now","yesterday":"yesterday","agoTemplate":"{time} ago"},"es":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["Ene.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ago.","Sept.","Oct.","Nov.","Dic."],"timeAbbrevs":["d","h","m","s"],"justNow":"justo ahora","yesterday":"ayer","agoTemplate":"hace {time}"},"fr":{"dayMonthTemplate":"le {day} {month}","dayMonthYearTemplate":"le {day} {month} {year}","monthNames":["janv.","f\u00e9vr.","mars","avr.","mai","juin","juil.","ao\u00fbt","sept.","oct.","nov.","d\u00e9c."],"timeAbbrevs":["d","h","m","s"],"justNow":"\u00e0 l'instant","yesterday":"hier","agoTemplate":"il y a {time}"},"de":{"dayMonthTemplate":"{day}. {month}","dayMonthYearTemplate":"{day}. {month} {year}","monthNames":["Jan","Feb","M\u00e4r","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],"timeAbbrevs":["d","h","m","s"],"justNow":"Gerade eben","yesterday":"gestern","agoTemplate":"vor {time}"},"it":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["gen","feb","mar","apr","mag","giu","lug","ago","set","ott","nov","dic"],"timeAbbrevs":["d","h","m","s"],"justNow":"ora","yesterday":"ieri","agoTemplate":"{time} fa"},"ja":{"dayMonthTemplate":"{month} {day}","dayMonthYearTemplate":"{month} {day} {year}","monthNames":["1\u6708","2\u6708","3\u6708","4\u6708","5\u6708","6\u6708","7\u6708","8\u6708","9\u6708","10\u6708","11\u6708","12\u6708"],"timeAbbrevs":["\u65e5","\u6642\u9593","\u5206","\u79d2"],"justNow":"\u305f\u3063\u305f\u4eca","yesterday":"\u6628\u65e5","agoTemplate":"{time}\u524d"},"id":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["Jan","Feb","Mar","Apr","Mei","Jun","Jul","Agt","Sep","Okt","Nov","Des"],"timeAbbrevs":["d","h","m","s"],"justNow":"Baru saja","yesterday":"kemarin","agoTemplate":"{time} lalu"},"pt":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez"],"timeAbbrevs":["d","h","m","s"],"justNow":"agora h\u00e1 pouco","yesterday":"ontem","agoTemplate":"{time}"},"hi":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["\u091c\u0928","\u092b\u093c\u0930","\u092e\u093e\u0930\u094d\u091a","\u0905\u092a\u094d\u0930\u0948","\u092e\u0908","\u091c\u0942\u0928","\u091c\u0941\u0932\u093e","\u0905\u0917","\u0938\u093f\u0924\u0902","\u0905\u0915\u094d\u091f\u0942","\u0928\u0935\u0902","\u0926\u093f\u0938\u0902"],"timeAbbrevs":["d","h","m","s"],"justNow":"\u092c\u0938 \u0905\u092d\u0940","yesterday":"\u0915\u0932","agoTemplate":"{time} \u092a\u0939\u0932\u0947"},"nl":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"],"timeAbbrevs":["d","u","m","s"],"justNow":"zojuist","yesterday":"gisteren","agoTemplate":"{time} geleden"},"da":{"dayMonthTemplate":"{day}. {month}","dayMonthYearTemplate":"{day}. {month} {year}","monthNames":["jan","feb","mar","apr","maj","jun","jul","aug","sep","okt","nov","dec"],"timeAbbrevs":["d","t","m","s"],"justNow":"lige nu","yesterday":"i g\u00e5r","agoTemplate":"For {time} siden"},"fi":{"dayMonthTemplate":"{day}. {month}","dayMonthYearTemplate":"{day}. {month} {year}","monthNames":["tammi","helmi","maalis","huhti","touko","kes\u00e4","hein\u00e4","elo","syys","loka","marras","joulu"],"timeAbbrevs":["vrk","t","m","s"],"justNow":"juuri nyt","yesterday":"eilen","agoTemplate":"{time} sitten"},"no":{"dayMonthTemplate":"{day}. {month}","dayMonthYearTemplate":"{day}. {month} {year}","monthNames":["jan","feb","mar","apr","mai","jun","jul","aug","sep","okt","nov","des"],"timeAbbrevs":["d","t","m","s"],"justNow":"akkurat n\u00e5","yesterday":"i g\u00e5r","agoTemplate":"for {time} siden"},"sv":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month}, {year}","monthNames":["Jan","Feb","Mar","Apr","Maj","Jun","Jul","Aug","Sep","Okt","Nov","Dec"],"timeAbbrevs":["d","h","m","s"],"justNow":"just nu","yesterday":"ig\u00e5r","agoTemplate":"{time} sedan"},"mr":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["\u091c\u093e\u0928\u0947","\u092b\u0947\u092c\u094d\u0930\u0941","\u092e\u093e\u0930\u094d\u091a","\u090f\u092a\u094d\u0930\u093f","\u092e\u0947","\u091c\u0942\u0928","\u091c\u0941\u0932\u0948","\u0911\u0917","\u0938\u092a\u094d\u091f\u0947\u0902","\u0911\u0915\u094d\u091f\u094b","\u0928\u094b\u0935\u094d\u0939\u0947\u0902","\u0921\u093f\u0938\u0947\u0902"],"timeAbbrevs":["d","h","m","s"],"justNow":"\u0906\u0924\u093e\u091a","yesterday":"\u0915\u093e\u0932","agoTemplate":"{time}\u092a\u0942\u0930\u094d\u0935\u0940"},"bn":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0","\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0","\u09ae\u09be\u09b0\u09cd\u099a","\u098f\u09aa\u09cd\u09b0\u09bf\u09b2","\u09ae\u09c7","\u099c\u09c1\u09a8","\u099c\u09c1\u09b2\u09be\u0987","\u0986\u0997\u09b8\u09cd\u099f","\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0","\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0","\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0","\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"],"timeAbbrevs":["d","h","m","s"],"justNow":"\u098f\u0996\u09c1\u09a8\u09bf","yesterday":"\u0997\u09a4\u0995\u09be\u09b2","agoTemplate":"{time} \u0986\u0997\u09c7"},"ta":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["\u0b9c\u0ba9.","\u0baa\u0bbf\u0baa\u0bcd.","\u0bae\u0bbe\u0bb0\u0bcd.","\u0b8f\u0baa\u0bcd.","\u0bae\u0bc7","\u0b9c\u0bc2\u0ba9\u0bcd","\u0b9c\u0bc2\u0bb2\u0bc8","\u0b86\u0b95.","\u0b9a\u0bc6\u0baa\u0bcd.","\u0b85\u0b95\u0bcd.","\u0ba8\u0bb5.","\u0b9f\u0bbf\u0b9a."],"timeAbbrevs":["\u0ba8\u0bbe","\u0bae","\u0ba8\u0bbf","\u0ba8\u0bca"],"justNow":"\u0b9a\u0bb1\u0bcd\u0bb1\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd","yesterday":"\u0ba8\u0bc7\u0bb1\u0bcd\u0bb1\u0bc1","agoTemplate":"{time} \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"},"ar":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["\u064a\u0646\u0627\u064a\u0631","\u0641\u0628\u0631\u0627\u064a\u0631","\u0645\u0627\u0631\u0633","\u0623\u0628\u0631\u064a\u0644","\u0645\u0627\u064a\u0648","\u064a\u0648\u0646\u064a\u0648","\u064a\u0648\u0644\u064a\u0648","\u0623\u063a\u0633\u0637\u0633","\u0633\u0628\u062a\u0645\u0628\u0631","\u0623\u0643\u062a\u0648\u0628\u0631","\u0646\u0648\u0641\u0645\u0628\u0631","\u062f\u064a\u0633\u0645\u0628\u0631"],"timeAbbrevs":["d","h","m","s"],"justNow":"\u0627\u0644\u0622\u0646","yesterday":"\u0627\u0644\u0623\u0645\u0633","agoTemplate":"{time} \u0645\u0636\u0649"},"he":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month} {year}","monthNames":["\u05d9\u05e0\u05d5\u05f3","\u05e4\u05d1\u05e8\u05f3","\u05de\u05e8\u05e5","\u05d0\u05e4\u05e8\u05f3","\u05de\u05d0\u05d9","\u05d9\u05d5\u05e0\u05f3","\u05d9\u05d5\u05dc\u05f3","\u05d0\u05d5\u05d2\u05f3","\u05e1\u05e4\u05d8\u05f3","\u05d0\u05d5\u05e7\u05f3","\u05e0\u05d5\u05d1\u05f3","\u05d3\u05e6\u05de\u05f3"],"timeAbbrevs":["\u05d9\u2019","\u05e9\u2019","\u05d3\u2019","\u05e9\u05e0\u2019"],"justNow":"\u05d6\u05d4 \u05e2\u05ea\u05d4","yesterday":"\u05d0\u05ea\u05de\u05d5\u05dc","agoTemplate":"\u05dc\u05e4\u05e0\u05d9 {time}"},"gu":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month}, {year}","monthNames":["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1","\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1","\u0aae\u0abe\u0ab0\u0acd\u0a9a","\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2","\u0aae\u0ac7","\u0a9c\u0ac2\u0aa8","\u0a9c\u0ac1\u0ab2\u0abe\u0a88","\u0a91\u0a97","\u0ab8\u0aaa\u0acd\u0a9f\u0ac7","\u0a91\u0a95\u0acd\u0a9f\u0acb","\u0aa8\u0ab5\u0ac7","\u0aa1\u0abf\u0ab8\u0ac7"],"timeAbbrevs":["d","h","m","s"],"justNow":"\u0ab9\u0aae\u0aa3\u0abe\u0a82 \u0a9c","yesterday":"\u0a97\u0a87\u0a95\u0abe\u0ab2\u0ac7","agoTemplate":"{time} \u0aaa\u0ab9\u0ac7\u0ab2\u0abe"},"kn":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month}, {year}","monthNames":["\u0c9c\u0ca8.","\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1.","\u0cae\u0cbe","\u0c8f\u0caa\u0ccd\u0cb0\u0cbf.","\u0cae\u0cc7","\u0c9c\u0cc2","\u0c9c\u0cc1.","\u0c86\u0c97.","\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82.","\u0c85\u0c95\u0ccd\u0c9f\u0ccb.","\u0ca8\u0cb5\u0cc6\u0c82.","\u0ca1\u0cbf\u0cb8\u0cc6\u0c82."],"timeAbbrevs":["d","h","m","s"],"justNow":"\u0c88\u0c97 \u0ca4\u0cbe\u0ca8\u0cc6","yesterday":"\u0ca8\u0cbf\u0ca8\u0ccd\u0ca8\u0cc6","agoTemplate":"{time} \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"},"ml":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month}, {year}","monthNames":["\u0d1c\u0d28\u0d41","\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41","\u0d2e\u0d3e\u0d7c","\u0d0f\u0d2a\u0d4d\u0d30\u0d3f","\u0d2e\u0d47\u0d2f\u0d4d","\u0d1c\u0d42\u0d7a","\u0d1c\u0d42\u0d32\u0d48","\u0d13\u0d17","\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02","\u0d12\u0d15\u0d4d\u0d1f\u0d4b","\u0d28\u0d35\u0d02","\u0d21\u0d3f\u0d38\u0d02"],"timeAbbrevs":["d","h","m","s"],"justNow":"\u0d07\u0d2a\u0d4d\u0d2a\u0d4b\u0d7e","yesterday":"\u0d07\u0d28\u0d4d\u0d28\u0d32\u0d46","agoTemplate":"{time} \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d"},"te":{"dayMonthTemplate":"{month} {day}","dayMonthYearTemplate":"{year} {month} {day}","monthNames":["\u0c1c\u0c28","\u0c2b\u0c3f\u0c2c\u0c4d\u0c30","\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f","\u0c0f\u0c2a\u0c4d\u0c30\u0c3f","\u0c2e\u0c47","\u0c1c\u0c42\u0c28\u0c4d","\u0c1c\u0c41\u0c32\u0c48","\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41","\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02","\u0c05\u0c15\u0c4d\u0c1f\u0c4b","\u0c28\u0c35\u0c02","\u0c21\u0c3f\u0c38\u0c46\u0c02"],"timeAbbrevs":["d","h","m","s"],"justNow":"\u0c07\u0c2a\u0c4d\u0c2a\u0c41\u0c21\u0c47","yesterday":"\u0c28\u0c3f\u0c28\u0c4d\u0c28","agoTemplate":"{time} \u0c15\u0c4d\u0c30\u0c3f\u0c24\u0c02"},"pl":{"dayMonthTemplate":"{day} {month}","dayMonthYearTemplate":"{day} {month}, {year}","monthNames":["sty","lut","mar","kwi","maj","cze","lip","sie","wrz","pa\u017a","lis","gru"],"timeAbbrevs":["d","h","m","s"],"justNow":"przed chwil\u0105","yesterday":"wczoraj","agoTemplate":"{time} temu"}},"isAnonPage":false,"isCrawler":false,"isLoggedIn":false,"isReactIframe":false,"isParallel":true,"isExpandedBroadcast":true,"logComponentTime":false,"networkOptions":{"enableSmartQuotes":true},"nid":0,"uid":null,"nidToSubdomainMap":{"0":null,"5":"es","6":"fr","7":"de","8":"it","9":"jp","10":"id","11":"pt","12":"hi","13":"nl","14":"da","15":"fi","16":"no","17":"sv","18":"mr","19":"bn","20":"ta","21":"ar","22":"he","23":"gu","24":"kn","25":"ml","26":"te","27":"pl"},"request_id":"77f0e0c6194b4505894817cf301d5ce0","revision":"5b8fa5a486e36e12603f139251a4b93b647999ec","serverCallUrl":"/webnode2/server_call_POST","subdomain_of_network":null,"subdomain_name":null,"subdomain_suffix":"quora.com","stripePublishableKey":"pk_live_9MI7iqAKfs033l029FQIVsV3","shouldReportE2E":false,"useScaledInference":true,"cdn":"fastly_singapore","fbApiVersion":"v3.2","onloadDelay":0,"qtextData":{"videoEnabled":true,"videoEditorSupported":false,"deleteVideoSvg":"https://qsfs.fs.quoracdn.net/-3-images.icons.video_player.delete.svg-26-69806d0a125ccb6f.svg","playVideoSvg":"https://qsfs.fs.quoracdn.net/-3-images.icons.video_player.play.svg-26-799ad719ced18f60.svg","videoIndicatorSvg":"https://qsfs.fs.quoracdn.net/-3-images.icons.video_player.film.svg-26-a57db8936487b244.svg","videoNotPresentSvg":"https://qsfs.fs.quoracdn.net/-3-images.icons.video_player.video_not_present.svg-26-b942e0263fe1c22a.svg","deleteVideoTitle":"Are you sure you want to delete your video?","deleteVideoMessage":"All related video clips will be deleted permanently.","deleteVideoButton":"Delete","cantSubmitVideo":"Submit your answer from the device the video was originally created, or delete the video to continue submission.","videosStillUploading":"Videos are still uploading.","videosStillUploadingAnotherAnswer":"Videos are still uploading from other answers.","videoNotPresent":"Your video is on a different device. You can edit your video from the device it was created.","uploadingSvg":"https://qsfs.fs.quoracdn.net/-3-images.icons.video_player.video_uploading.svg-26-570ef1fdded4eb79.svg","uploadErrorSvg":"https://qsfs.fs.quoracdn.net/-3-images.icons.video_player.notif_submission_failed.svg-26-df9cb7573661765c.svg","pauseUploadingTitle":"Uploading","doneUploadingTitle":"Uploaded","resumeUploadingTitle":"Upload Paused","uploadErrorTitle":"Something went wrong","pauseUploadingButton":"Pause","resumeUploadingButton":"Resume Uploading","retryUploadingButton":"Retry","unsavedVideosMsg":"Video uploading."},"pageIsMobile":false,"postkey":"dc12d42d0deb23d3baa67b0a97a6807d","speedStandard":{},"pageMode":"post_reload","fbAppId":"136609459636","androidAppPackageName":"com.quora.android","force_use_absolute_links":false,"windowId":"react_yqeoajwzpeuekimp"},"gatings":{"ad_unit_field_length_limits":{"business_name":40,"business_description":1024,"business_display_name":40,"title":65,"content_text":105,"url":1024,"domain_name":30,"tax_id":32},"enable_ad_placement_targeting":false,"enable_gender_targeting_ui":true,"enable_lead_gen_form_additional_field":true,"enable_lead_gen_campaign":false,"enable_browser_targeting_ui":true,"enable_keyword_retargeting_ui":true,"use_react_ads_manager":true,"qfeed_log_debugger":false,"new_messages_modal":false,"qtext_image_remove_button":false,"qtext_hyperlink_embed":false,"force_mobile_app_modals":null,"show_native_console_log":false,"android_debuggable":false,"send_unsplash_tracking_in_js":false,"console_log_js_messages":[],"broadcast_debug_mode":false,"broadcast_debug_filters":{"cid_filter":[],"dependency_filter":[]},"use_native_selection":false,"use_log_subdomain_for_log_sender":true,"client_side_batched_logging_interval":2000,"async_navigate_to_js":true,"qualtrics_development_mode":false,"speed_index_sampling_rate":0,"qualtrics_zone_codes":["4TKR5tYyBOyKSO1"],"enable_mobile_bug_report_by_shake_gesture":false,"multimodal_remove_proxy":false,"multimodal_remove_android_hack":false,"fix_body_styles_new":true,"broadcast_enabled":true,"verbose_client_logging_categories":[],"use_react_ask_question_flow":false},"window_q":{"errorSamplingRate":0,"revision":"5b8fa5a486e36e12603f139251a4b93b647999ec","subdomainSuffix":"quora.com"},"window_globals":{"isWebnodePage":false,"isWebnodeLoaded":true,"ansWebWebpackManifest":{"ads_manager":"https://qsfs.fs.quoracdn.net/-3-chunk.web.ads_manager.js.out-34-d731ac90e15af583.webpack","content_widgets":"https://qsfs.fs.quoracdn.net/-3-chunk.web.content_widgets.js.out-34-9fb16b903af819d6.webpack","dev":"https://qsfs.fs.quoracdn.net/-3-chunk.web.dev.js.out-34-22b9a93a2cd0bee9.webpack","internal":"https://qsfs.fs.quoracdn.net/-3-chunk.web.internal.js.out-34-a3e56a6978f6ccdc.webpack","qtext2":"https://qsfs.fs.quoracdn.net/-3-chunk.web.qtext2.js.out-34-0ff6f3d9707ec471.webpack","main":"https://qsfs.fs.quoracdn.net/-3-chunk.web.main.js.out-34-aa0672756936d0ab.webpack","firebase":"https://qsfs.fs.quoracdn.net/-3-chunk.web.firebase.js.out-34-2a0f8ac790681c7d.webpack","publisher_dashboard":"https://qsfs.fs.quoracdn.net/-3-chunk.web.publisher_dashboard.js.out-34-f7ed3c91ec4eaff9.webpack"},"ansWebWebpackChunks":["main"],"PAGE_IS_MOBILE":false},"closing_js_args":[{"parents":{"wjOWkv4i2":"*ROOT*","wjOWkv4i1":"*ROOT*","wjOWkv4i3":"*ROOT*","wjOWkv4i5":"wjOWkv4i2","waVGz5VJ1":"wjOWkv4i5","wjOWkv4i7":"wjOWkv4i1","w8zZPssF1":"wjOWkv4i7","w8zZPssF2":"wjOWkv4i7","wjOWkv4i9":"wjOWkv4i3","wBMIexxM11":"wjOWkv4i9","wBMIexxM13":"wjOWkv4i9","wBMIexxM15":"wjOWkv4i9","wBMIexxM1":"wjOWkv4i9","wBMIexxM2":"wjOWkv4i9","wBMIexxM3":"wjOWkv4i9","wBMIexxM4":"wjOWkv4i9","wBMIexxM5":"wjOWkv4i9","wBMIexxM6":"wjOWkv4i9","wBMIexxM7":"wjOWkv4i9","wBMIexxM8":"wjOWkv4i9","wBMIexxM9":"wjOWkv4i9","wBMIexxM16":"wjOWkv4i9","wBMIexxM17":"wjOWkv4i9","wBMIexxM18":"wjOWkv4i9","wBMIexxM19":"wjOWkv4i9","wBMIexxM20":"wjOWkv4i9","wBMIexxM22":"wjOWkv4i9","wBMIexxM28":"wBMIexxM22","wBMIexxM24":"wjOWkv4i9","wBMIexxM25":"wjOWkv4i9","wBMIexxM26":"wjOWkv4i9","wBMIexxM27":"wjOWkv4i9"},"children":{},"domids":{"wjOWkv4i5":"wjOWkv4i4","wjOWkv4i7":"wjOWkv4i6","wjOWkv4i9":"wjOWkv4i8","wBMIexxM11":"wBMIexxM10","wBMIexxM13":"wBMIexxM12","wBMIexxM15":"wBMIexxM14","wBMIexxM22":"wBMIexxM21","wBMIexxM24":"wBMIexxM23"},"hmacs":{"wjOWkv4i2":"FwDipDG7HwJLow","wjOWkv4i1":"shHAGxrO+DR7KR","wjOWkv4i3":"jSgexIrQDIVpn4","wjOWkv4i5":"jVDuVsfNOeJm/M","waVGz5VJ1":"PZehp13DRwulzr","wjOWkv4i7":"hH8ImwYHbFO7N6","w8zZPssF1":"ejzull0AdJgImv","w8zZPssF2":"YdnwZwafteKOeF","wjOWkv4i9":"vXr4a3MLgJsI+k","wBMIexxM11":"H4N6YL2RRfUEoi","wBMIexxM13":"uWxwcwtNxqgPAX","wBMIexxM15":"RBbDsiUbk40vfy","wBMIexxM1":"czkx6+y6npPZ+h","wBMIexxM2":"nl4pmArREuWDZD","wBMIexxM3":"NUTvml8d3VXOs4","wBMIexxM4":"CX63EsrFxklWDs","wBMIexxM5":"30nC6UoN3iOWxG","wBMIexxM6":"BIoz51zcKYvT4a","wBMIexxM7":"cehwZJcyZQbo81","wBMIexxM8":"WKi/ll/ip05p33","wBMIexxM9":"CJNVh+QzIn9+2k","wBMIexxM16":"AMMmJbLlV4xPNu","wBMIexxM17":"wzXjEjB7bkuwCN","wBMIexxM18":"1j77S+X28y8XLC","wBMIexxM19":"1UTkDR9nG4n2oK","wBMIexxM20":"YHfNweTms8ZWw8","wBMIexxM22":"1on7AgBqko/PdP","wBMIexxM28":"8sPHrRXxQOxkic","wBMIexxM24":"E+mVuK2XdQ+u68","wBMIexxM25":"2D/JudGYD5k2wv","wBMIexxM26":"0Dcgkp3g70+Q2B","wBMIexxM27":"IfUMPT6rWRMndK"}},[["unified_view/ans_frontend","ReactModalBridge","w8zZPssF1","",{},{}],["unified_view/signup/conversion_logging","ConversionLogging","w8zZPssF2","",{},{}],["login","LoginSignal","wBMIexxM11","",{"uid":null},{}],["login","LoginListener","wBMIexxM13","",{"next":"https://www.quora.com/q/techiedelight/500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions"},{}],["unified_view/signup/_signup","DialogSignupFormWrapper","wBMIexxM1","",{"dismissible":true,"sign_in_text":"Sign In","current_url":"https://www.quora.com/q/techiedelight/500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions","wallType":4},{}],["unified_view/signup/pixel","FacebookPUAPixel","wBMIexxM2","",{"events":[]},{}],["unified_view/signup/pixel","GooglePUAPixel","wBMIexxM3","",{"events":[]},{}],["unified_view/signup/pixel","KeyweePUAPixel","wBMIexxM4","",{"events":[]},{}],["unified_view/signup/pixel","TwitterPUAPixel","wBMIexxM5","",{"events":[]},{}],["unified_view/signup/pixel","AwinPUAPixel","wBMIexxM6","",{"events":[],"hashedUid":"a1234567890","awc":null,"channel":"IN"},{}],["unified_view/signup/pixel","QuoraPUAPixel","wBMIexxM7","",{"events":[]},{}],["unified_view/signup/pixel","SnapPUAPixel","wBMIexxM8","",{"events":[],"email":null},{}],["unified_view/signup/pixel","TikTokPUAPixel","wBMIexxM9","",{"events":[]},{}],["unified_view/ad_blocker","AdBlockerCheckerMain","wBMIexxM16","",{},{}],["view/captcha","Captcha","wBMIexxM17","",{},{}],["unified_view/reauth","ReauthWrapper","wBMIexxM18","",{},{}],["view/livenode","LiveSpinner","wBMIexxM19","",{},{}],["unified_view/pmsg","PMsgContainer","wBMIexxM20","",{},{}],["unified_view/facebook","TokenRefresher","wBMIexxM28","",{"redirect_url":"https://www.quora.com/q/techiedelight/500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions"},{}],["unified_view/signup/google","GoogleAutoLoginWeb","wBMIexxM24","",{"scopes":["email","profile"],"current_url":"https://www.quora.com/q/techiedelight/500-Data-Structures-and-Algorithms-interview-questions-and-their-solutions","use_react_google_auto_login":true},{}],["unified_view/service_worker","Installer","wBMIexxM25","",{},{}],["unified_view/sharethis","SharethisImageTracker","wBMIexxM26","",{"image_source":""},{}],["unified_view/gif_player","QTextGIFPlayer","wBMIexxM27","",{},{}]],true]}});</script><script type="text/javascript">window.setTimingData({"server_time":541.602,"webnode_loadable_render_time":40.118,"query_time":525.48,"head_script_time":5.329,"total_worker_time":732.039,"window_id":"react_yqeoajwzpeuekimp","page":541.602,"request":558.596,"experiments":"AAIBAO7DirCpG+dkcbPHm7Lcqr6I9uAMScmCYefn4nnFVrFG+U0=","envs":"AAIBALtDo3TRswAuxGb4awD41gHo8IfelDbBfqymXK61BUdfmb0e9u3hfhbH1mEA7QsVNw3cWh7FKFLz0cNWkMrPOMcZl7osPY5r2Kcay249cgpUxwH+i4uA/zdUIPS44ziPfQZafgCHL5wPG7n6zsiWlZUCvzUZ5MljC4u/+n1NZkS1S2PRASZcm9oNpz1KY+Mpk5EVtemvnjr8Lf22Q9HxN9Lkm78XJI3ImAmWBu/lda8vk6mxE/C4/tZgQb2NSydfCZWt9oMrqE6RNY/h5CH/qPDWMPDYLJ/B5YGMYkv+33Qu1Q=="});
window.reportPageSpeedData({"standard":{}});
</script><script type="text/javascript">var isHttps="https:"==window.location.protocol,serviceWorkersSupported="serviceWorker"in window.navigator;isHttps&&serviceWorkersSupported&&window.addEventListener("load",function(){setTimeout(function(){window.navigator.serviceWorker.register("/sw.js").then(function(e){e.update()})},100)});
</script></body></html>